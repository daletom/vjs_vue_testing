{
  "version": 3,
  "sources": ["../../videojs-ima/dist/videojs.ima.es.js", "dep:videojs-ima"],
  "sourcesContent": ["import videojs from 'video.js';\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * IMA SDK integration plugin for Video.js. For more information see\n * https://www.github.com/googleads/videojs-ima\n */\n\n/**\n * Wraps the video.js player for the plugin.\n *\n * @param {Object} player Video.js player instance.\n * @param {Object} adsPluginSettings Settings for the contrib-ads plugin.\n * @param {Controller} controller Reference to the parent controller.\n */\nconst PlayerWrapper = function (player, adsPluginSettings, controller) {\n  /**\n   * Instance of the video.js player.\n   */\n  this.vjsPlayer = player;\n\n  /**\n   * Plugin controller.\n   */\n  this.controller = controller;\n\n  /**\n   * Timer used to track content progress.\n   */\n  this.contentTrackingTimer = null;\n\n  /**\n   * True if our content video has completed, false otherwise.\n   */\n  this.contentComplete = false;\n\n  /**\n   * Handle to interval that repeatedly updates current time.\n   */\n  this.updateTimeIntervalHandle = null;\n\n  /**\n   * Interval (ms) to check for player resize for fluid support.\n   */\n  this.updateTimeInterval = 1000;\n\n  /**\n   * Handle to interval that repeatedly checks for seeking.\n   */\n  this.seekCheckIntervalHandle = null;\n\n  /**\n   * Interval (ms) on which to check if the user is seeking through the\n   * content.\n   */\n  this.seekCheckInterval = 1000;\n\n  /**\n   * Handle to interval that repeatedly checks for player resize.\n   */\n  this.resizeCheckIntervalHandle = null;\n\n  /**\n   * Interval (ms) to check for player resize for fluid support.\n   */\n  this.resizeCheckInterval = 250;\n\n  /**\n   * Threshold by which to judge user seeking. We check every 1000 ms to see\n   * if the user is seeking. In order for us to decide that they are *not*\n   * seeking, the content video playhead must only change by 900-1100 ms\n   * between checks. Any greater change and we assume the user is seeking\n   * through the video.\n   */\n  this.seekThreshold = 100;\n\n  /**\n   * Content ended listeners passed by the publisher to the plugin. Publishers\n   * should allow the plugin to handle content ended to ensure proper support\n   * of custom ad playback.\n   */\n  this.contentEndedListeners = [];\n\n  /**\n   * Stores the content source so we can re-populate it manually after a\n   * post-roll on iOS.\n   */\n  this.contentSource = '';\n\n  /**\n   * Stores the content source type so we can re-populate it manually after a\n   * post-roll.\n   */\n  this.contentSourceType = '';\n\n  /**\n   * Stores data for the content playhead tracker.\n   */\n  this.contentPlayheadTracker = {\n    currentTime: 0,\n    previousTime: 0,\n    seeking: false,\n    duration: 0\n  };\n\n  /**\n   * Player dimensions. Used in our resize check.\n   */\n  this.vjsPlayerDimensions = {\n    width: this.getPlayerWidth(),\n    height: this.getPlayerHeight()\n  };\n\n  /**\n   * Video.js control bar.\n   */\n  this.vjsControls = this.vjsPlayer.getChild('controlBar');\n\n  /**\n   * Vanilla HTML5 video player underneath the video.js player.\n   */\n  this.h5Player = null;\n\n  this.vjsPlayer.one('play', this.setUpPlayerIntervals.bind(this));\n  this.boundContentEndedListener = this.localContentEndedListener.bind(this);\n  this.vjsPlayer.on('contentended', this.boundContentEndedListener);\n  this.vjsPlayer.on('dispose', this.playerDisposedListener.bind(this));\n  this.vjsPlayer.on('readyforpreroll', this.onReadyForPreroll.bind(this));\n  this.vjsPlayer.on('adtimeout', this.onAdTimeout.bind(this));\n  this.vjsPlayer.ready(this.onPlayerReady.bind(this));\n\n  if (this.controller.getSettings().requestMode === 'onPlay') {\n    this.vjsPlayer.one('play', this.controller.requestAds.bind(this.controller));\n  }\n\n  this.vjsPlayer.ads(adsPluginSettings);\n};\n\n/**\n * Set up the intervals we use on the player.\n */\nPlayerWrapper.prototype.setUpPlayerIntervals = function () {\n  this.updateTimeIntervalHandle = setInterval(this.updateCurrentTime.bind(this), this.updateTimeInterval);\n  this.seekCheckIntervalHandle = setInterval(this.checkForSeeking.bind(this), this.seekCheckInterval);\n  this.resizeCheckIntervalHandle = setInterval(this.checkForResize.bind(this), this.resizeCheckInterval);\n};\n\n/**\n * Updates the current time of the video\n */\nPlayerWrapper.prototype.updateCurrentTime = function () {\n  if (!this.contentPlayheadTracker.seeking) {\n    this.contentPlayheadTracker.currentTime = this.vjsPlayer.currentTime();\n  }\n};\n\n/**\n * Detects when the user is seeking through a video.\n * This is used to prevent mid-rolls from playing while a user is seeking.\n *\n * There *is* a seeking property of the HTML5 video element, but it's not\n * properly implemented on all platforms (e.g. mobile safari), so we have to\n * check ourselves to be sure.\n */\nPlayerWrapper.prototype.checkForSeeking = function () {\n  const tempCurrentTime = this.vjsPlayer.currentTime();\n  const diff = (tempCurrentTime - this.contentPlayheadTracker.previousTime) * 1000;\n  if (Math.abs(diff) > this.seekCheckInterval + this.seekThreshold) {\n    this.contentPlayheadTracker.seeking = true;\n  } else {\n    this.contentPlayheadTracker.seeking = false;\n  }\n  this.contentPlayheadTracker.previousTime = this.vjsPlayer.currentTime();\n};\n\n/**\n * Detects when the player is resized (for fluid support) and resizes the\n * ads manager to match.\n */\nPlayerWrapper.prototype.checkForResize = function () {\n  const currentWidth = this.getPlayerWidth();\n  const currentHeight = this.getPlayerHeight();\n\n  if (currentWidth != this.vjsPlayerDimensions.width || currentHeight != this.vjsPlayerDimensions.height) {\n    this.vjsPlayerDimensions.width = currentWidth;\n    this.vjsPlayerDimensions.height = currentHeight;\n    this.controller.onPlayerResize(currentWidth, currentHeight);\n  }\n};\n\n/**\n * Local content ended listener for contentComplete.\n */\nPlayerWrapper.prototype.localContentEndedListener = function () {\n  if (!this.contentComplete) {\n    this.contentComplete = true;\n    this.controller.onContentComplete();\n  }\n\n  for (let index in this.contentEndedListeners) {\n    if (typeof this.contentEndedListeners[index] === 'function') {\n      this.contentEndedListeners[index]();\n    }\n  }\n\n  clearInterval(this.updateTimeIntervalHandle);\n  clearInterval(this.seekCheckIntervalHandle);\n  clearInterval(this.resizeCheckIntervalHandle);\n  if (this.vjsPlayer.el()) {\n    this.vjsPlayer.one('play', this.setUpPlayerIntervals.bind(this));\n  }\n};\n\n/**\n * Called when it's time to play a post-roll but we don't have one to play.\n */\nPlayerWrapper.prototype.onNoPostroll = function () {\n  this.vjsPlayer.trigger('nopostroll');\n};\n\n/**\n * Detects when the video.js player has been disposed.\n */\nPlayerWrapper.prototype.playerDisposedListener = function () {\n  this.contentEndedListeners = [];\n  this.controller.onPlayerDisposed();\n\n  this.contentComplete = true;\n  this.vjsPlayer.off('contentended', this.boundContentEndedListener);\n\n  // Bug fix: https://github.com/googleads/videojs-ima/issues/306\n  if (this.vjsPlayer.ads.adTimeoutTimeout) {\n    clearTimeout(this.vjsPlayer.ads.adTimeoutTimeout);\n  }\n\n  const intervalsToClear = [this.updateTimeIntervalHandle, this.seekCheckIntervalHandle, this.resizeCheckIntervalHandle];\n  for (let index in intervalsToClear) {\n    if (intervalsToClear[index]) {\n      clearInterval(intervalsToClear[index]);\n    }\n  }\n};\n\n/**\n * Start ad playback, or content video playback in the absence of a\n * pre-roll.\n */\nPlayerWrapper.prototype.onReadyForPreroll = function () {\n  this.controller.onPlayerReadyForPreroll();\n};\n\n/**\n * Detects if the ad has timed out.\n */\nPlayerWrapper.prototype.onAdTimeout = function () {\n  this.controller.onAdTimeout();\n};\n\n/**\n * Called when the player fires its 'ready' event.\n */\nPlayerWrapper.prototype.onPlayerReady = function () {\n  this.h5Player = document.getElementById(this.getPlayerId()).getElementsByClassName('vjs-tech')[0];\n\n  // Detect inline options\n  if (this.h5Player.hasAttribute('autoplay')) {\n    this.controller.setSetting('adWillAutoPlay', true);\n  }\n\n  // Sync ad volume with player volume.\n  this.onVolumeChange();\n  this.vjsPlayer.on('fullscreenchange', this.onFullscreenChange.bind(this));\n  this.vjsPlayer.on('volumechange', this.onVolumeChange.bind(this));\n\n  this.controller.onPlayerReady();\n};\n\n/**\n * Listens for the video.js player to change its fullscreen status. This\n * keeps the fullscreen-ness of the AdContainer in sync with the player.\n */\nPlayerWrapper.prototype.onFullscreenChange = function () {\n  if (this.vjsPlayer.isFullscreen()) {\n    this.controller.onPlayerEnterFullscreen();\n  } else {\n    this.controller.onPlayerExitFullscreen();\n  }\n};\n\n/**\n * Listens for the video.js player to change its volume. This keeps the ad\n * volume in sync with the content volume if the volume of the player is\n * changed while content is playing.\n */\nPlayerWrapper.prototype.onVolumeChange = function () {\n  const newVolume = this.vjsPlayer.muted() ? 0 : this.vjsPlayer.volume();\n  this.controller.onPlayerVolumeChanged(newVolume);\n};\n\n/**\n * Inject the ad container div into the DOM.\n *\n * @param{HTMLElement} adContainerDiv The ad container div.\n */\nPlayerWrapper.prototype.injectAdContainerDiv = function (adContainerDiv) {\n  this.vjsControls.el().parentNode.appendChild(adContainerDiv);\n};\n\n/**\n * @return {Object} The content player.\n */\nPlayerWrapper.prototype.getContentPlayer = function () {\n  return this.h5Player;\n};\n\n/**\n * @return {number} The volume, 0-1.\n */\nPlayerWrapper.prototype.getVolume = function () {\n  return this.vjsPlayer.muted() ? 0 : this.vjsPlayer.volume();\n};\n\n/**\n * Set the volume of the player. 0-1.\n *\n * @param {number} volume The new volume.\n */\nPlayerWrapper.prototype.setVolume = function (volume) {\n  this.vjsPlayer.volume(volume);\n  if (volume == 0) {\n    this.vjsPlayer.muted(true);\n  } else {\n    this.vjsPlayer.muted(false);\n  }\n};\n\n/**\n * Ummute the player.\n */\nPlayerWrapper.prototype.unmute = function () {\n  this.vjsPlayer.muted(false);\n};\n\n/**\n * Mute the player.\n */\nPlayerWrapper.prototype.mute = function () {\n  this.vjsPlayer.muted(true);\n};\n\n/**\n * Play the video.\n */\nPlayerWrapper.prototype.play = function () {\n  this.vjsPlayer.play();\n};\n\n/**\n * Toggles playback of the video.\n */\nPlayerWrapper.prototype.togglePlayback = function () {\n  if (this.vjsPlayer.paused()) {\n    this.vjsPlayer.play();\n  } else {\n    this.vjsPlayer.pause();\n  }\n};\n\n/**\n * Get the player width.\n *\n * @return {number} The player's width.\n */\nPlayerWrapper.prototype.getPlayerWidth = function () {\n  let width = (getComputedStyle(this.vjsPlayer.el()) || {}).width;\n\n  if (!width || parseFloat(width) === 0) {\n    width = (this.vjsPlayer.el().getBoundingClientRect() || {}).width;\n  }\n\n  return parseFloat(width) || this.vjsPlayer.width();\n};\n\n/**\n * Get the player height.\n *\n * @return {number} The player's height.\n */\nPlayerWrapper.prototype.getPlayerHeight = function () {\n  let height = (getComputedStyle(this.vjsPlayer.el()) || {}).height;\n\n  if (!height || parseFloat(height) === 0) {\n    height = (this.vjsPlayer.el().getBoundingClientRect() || {}).height;\n  }\n\n  return parseFloat(height) || this.vjsPlayer.height();\n};\n\n/**\n * @return {Object} The vjs player's options object.\n */\nPlayerWrapper.prototype.getPlayerOptions = function () {\n  return this.vjsPlayer.options_;\n};\n\n/**\n * Returns the instance of the player id.\n * @return {string} The player id.\n */\nPlayerWrapper.prototype.getPlayerId = function () {\n  return this.vjsPlayer.id();\n};\n\n/**\n * Toggle fullscreen state.\n */\nPlayerWrapper.prototype.toggleFullscreen = function () {\n  if (this.vjsPlayer.isFullscreen()) {\n    this.vjsPlayer.exitFullscreen();\n  } else {\n    this.vjsPlayer.requestFullscreen();\n  }\n};\n\n/**\n * Returns the content playhead tracker.\n *\n * @return {Object} The content playhead tracker.\n */\nPlayerWrapper.prototype.getContentPlayheadTracker = function () {\n  return this.contentPlayheadTracker;\n};\n\n/**\n * Handles ad errors.\n *\n * @param {Object} adErrorEvent The ad error event thrown by the IMA SDK.\n */\nPlayerWrapper.prototype.onAdError = function (adErrorEvent) {\n  this.vjsControls.show();\n  const errorMessage = adErrorEvent.getError !== undefined ? adErrorEvent.getError() : adErrorEvent.stack;\n  this.vjsPlayer.trigger({ type: 'adserror', data: {\n      AdError: errorMessage,\n      AdErrorEvent: adErrorEvent\n    } });\n};\n\n/**\n * Handles ad log messages.\n * @param {google.ima.AdEvent} adEvent The AdEvent thrown by the IMA SDK.\n */\nPlayerWrapper.prototype.onAdLog = function (adEvent) {\n  const adData = adEvent.getAdData();\n  const errorMessage = adData['adError'] !== undefined ? adData['adError'].getMessage() : undefined;\n  this.vjsPlayer.trigger({ type: 'adslog', data: {\n      AdError: errorMessage,\n      AdEvent: adEvent\n    } });\n};\n\n/**\n * Handles ad break starting.\n */\nPlayerWrapper.prototype.onAdBreakStart = function () {\n  this.contentSource = this.vjsPlayer.currentSrc();\n  this.contentSourceType = this.vjsPlayer.currentType();\n  this.vjsPlayer.off('contentended', this.boundContentEndedListener);\n  this.vjsPlayer.ads.startLinearAdMode();\n  this.vjsControls.hide();\n  this.vjsPlayer.pause();\n};\n\n/**\n * Handles ad break ending.\n */\nPlayerWrapper.prototype.onAdBreakEnd = function () {\n  this.vjsPlayer.on('contentended', this.boundContentEndedListener);\n  if (this.vjsPlayer.ads.inAdBreak()) {\n    this.vjsPlayer.ads.endLinearAdMode();\n  }\n  this.vjsControls.show();\n};\n\n/**\n * Handles an individual ad start.\n */\nPlayerWrapper.prototype.onAdStart = function () {\n  this.vjsPlayer.trigger('ads-ad-started');\n};\n\n/**\n * Handles when all ads have finished playing.\n */\nPlayerWrapper.prototype.onAllAdsCompleted = function () {\n  if (this.contentComplete == true) {\n    // The null check on this.contentSource was added to fix\n    // an error when the post-roll was an empty VAST tag.\n    if (this.contentSource && this.vjsPlayer.currentSrc() != this.contentSource) {\n      this.vjsPlayer.src({\n        src: this.contentSource,\n        type: this.contentSourceType\n      });\n    }\n    this.controller.onContentAndAdsCompleted();\n  }\n};\n\n/**\n * Triggers adsready for contrib-ads.\n */\nPlayerWrapper.prototype.onAdsReady = function () {\n  this.vjsPlayer.trigger('adsready');\n};\n\n/**\n * Changes the player source.\n * @param {?string} contentSrc The URI for the content to be played. Leave\n *     blank to use the existing content.\n */\nPlayerWrapper.prototype.changeSource = function (contentSrc) {\n  // Only try to pause the player when initialised with a source already\n  if (this.vjsPlayer.currentSrc()) {\n    this.vjsPlayer.currentTime(0);\n    this.vjsPlayer.pause();\n  }\n  if (contentSrc) {\n    this.vjsPlayer.src(contentSrc);\n  }\n  this.vjsPlayer.one('loadedmetadata', this.seekContentToZero.bind(this));\n};\n\n/**\n * Seeks content to 00:00:00. This is used as an event handler for the\n * loadedmetadata event, since seeking is not possible until that event has\n * fired.\n */\nPlayerWrapper.prototype.seekContentToZero = function () {\n  this.vjsPlayer.currentTime(0);\n};\n\n/**\n * Triggers an event on the VJS player\n * @param  {string} name The event name.\n * @param  {Object} data The event data.\n */\nPlayerWrapper.prototype.triggerPlayerEvent = function (name, data) {\n  this.vjsPlayer.trigger(name, data);\n};\n\n/**\n * Listener JSDoc for ESLint. This listener can be passed to\n * addContentEndedListener.\n * @callback listener\n */\n\n/**\n * Adds a listener for the 'contentended' event of the video player. This should\n * be used instead of setting an 'contentended' listener directly to ensure that\n * the ima can do proper cleanup of the SDK before other event listeners are\n * called.\n * @param {listener} listener The listener to be called when content\n *     completes.\n */\nPlayerWrapper.prototype.addContentEndedListener = function (listener) {\n  this.contentEndedListeners.push(listener);\n};\n\n/**\n * Reset the player.\n */\nPlayerWrapper.prototype.reset = function () {\n  // Attempts to remove the contentEndedListener before adding it.\n  // This is to prevent an error where an erroring video caused multiple\n  // contentEndedListeners to be added.\n  this.vjsPlayer.off('contentended', this.boundContentEndedListener);\n\n  this.vjsPlayer.on('contentended', this.boundContentEndedListener);\n  this.vjsControls.show();\n  if (this.vjsPlayer.ads.inAdBreak()) {\n    this.vjsPlayer.ads.endLinearAdMode();\n  }\n  // Reset the content time we give the SDK. Fixes an issue where requesting\n  // VMAP followed by VMAP would play the second mid-rolls as pre-rolls if\n  // the first playthrough of the video passed the second response's\n  // mid-roll time.\n  this.contentPlayheadTracker.currentTime = 0;\n  this.contentComplete = false;\n};\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * IMA SDK integration plugin for Video.js. For more information see\n * https://www.github.com/googleads/videojs-ima\n */\n\n/**\n * Ad UI implementation.\n *\n * @param {Controller} controller Plugin controller.\n * @constructor\n * @struct\n * @final\n */\nconst AdUi = function (controller) {\n  /**\n   * Plugin controller.\n   */\n  this.controller = controller;\n\n  /**\n   * Div used as an ad container.\n   */\n  this.adContainerDiv = document.createElement('div');\n\n  /**\n   * Div used to display ad controls.\n   */\n  this.controlsDiv = document.createElement('div');\n\n  /**\n   * Div used to display ad countdown timer.\n   */\n  this.countdownDiv = document.createElement('div');\n\n  /**\n   * Div used to display add seek bar.\n   */\n  this.seekBarDiv = document.createElement('div');\n\n  /**\n   * Div used to display ad progress (in seek bar).\n   */\n  this.progressDiv = document.createElement('div');\n\n  /**\n   * Div used to display ad play/pause button.\n   */\n  this.playPauseDiv = document.createElement('div');\n\n  /**\n   * Div used to display ad mute button.\n   */\n  this.muteDiv = document.createElement('div');\n\n  /**\n   * Div used by the volume slider.\n   */\n  this.sliderDiv = document.createElement('div');\n\n  /**\n   * Volume slider level visuals\n   */\n  this.sliderLevelDiv = document.createElement('div');\n\n  /**\n   * Div used to display ad fullscreen button.\n   */\n  this.fullscreenDiv = document.createElement('div');\n\n  /**\n   * Bound event handler for onMouseUp.\n   */\n  this.boundOnMouseUp = this.onMouseUp.bind(this);\n\n  /**\n   * Bound event handler for onMouseMove.\n   */\n  this.boundOnMouseMove = this.onMouseMove.bind(this);\n\n  /**\n   * Stores data for the ad playhead tracker.\n   */\n  this.adPlayheadTracker = {\n    'currentTime': 0,\n    'duration': 0,\n    'isPod': false,\n    'adPosition': 0,\n    'totalAds': 0\n  };\n\n  /**\n   * Used to prefix videojs ima controls.\n   */\n  this.controlPrefix = this.controller.getPlayerId() + '_';\n\n  /**\n   * Boolean flag to show or hide the ad countdown timer.\n   */\n  this.showCountdown = true;\n  if (this.controller.getSettings().showCountdown === false) {\n    this.showCountdown = false;\n  }\n\n  /**\n   * Boolean flag if the current ad is nonlinear.\n   */\n  this.isAdNonlinear = false;\n\n  this.createAdContainer();\n};\n\n/**\n * Creates the ad container.\n */\nAdUi.prototype.createAdContainer = function () {\n  this.assignControlAttributes(this.adContainerDiv, 'ima-ad-container');\n  this.adContainerDiv.style.position = 'absolute';\n  this.adContainerDiv.style.zIndex = 1111;\n  this.adContainerDiv.addEventListener('mouseenter', this.showAdControls.bind(this), false);\n  this.adContainerDiv.addEventListener('mouseleave', this.hideAdControls.bind(this), false);\n  this.adContainerDiv.addEventListener('click', this.onAdContainerClick.bind(this), false);\n  this.createControls();\n  this.controller.injectAdContainerDiv(this.adContainerDiv);\n};\n\n/**\n * Create the controls.\n */\nAdUi.prototype.createControls = function () {\n  this.assignControlAttributes(this.controlsDiv, 'ima-controls-div');\n  this.controlsDiv.style.width = '100%';\n\n  if (!this.controller.getIsMobile()) {\n    this.assignControlAttributes(this.countdownDiv, 'ima-countdown-div');\n    this.countdownDiv.innerHTML = this.controller.getSettings().adLabel;\n    this.countdownDiv.style.display = this.showCountdown ? 'block' : 'none';\n  } else {\n    this.countdownDiv.style.display = 'none';\n  }\n\n  this.assignControlAttributes(this.seekBarDiv, 'ima-seek-bar-div');\n  this.seekBarDiv.style.width = '100%';\n\n  this.assignControlAttributes(this.progressDiv, 'ima-progress-div');\n\n  this.assignControlAttributes(this.playPauseDiv, 'ima-play-pause-div');\n  this.addClass(this.playPauseDiv, 'ima-playing');\n  this.playPauseDiv.addEventListener('click', this.onAdPlayPauseClick.bind(this), false);\n\n  this.assignControlAttributes(this.muteDiv, 'ima-mute-div');\n  this.addClass(this.muteDiv, 'ima-non-muted');\n  this.muteDiv.addEventListener('click', this.onAdMuteClick.bind(this), false);\n\n  this.assignControlAttributes(this.sliderDiv, 'ima-slider-div');\n  this.sliderDiv.addEventListener('mousedown', this.onAdVolumeSliderMouseDown.bind(this), false);\n\n  // Hide volume slider controls on iOS as they aren't supported.\n  if (this.controller.getIsIos()) {\n    this.sliderDiv.style.display = 'none';\n  }\n\n  this.assignControlAttributes(this.sliderLevelDiv, 'ima-slider-level-div');\n\n  this.assignControlAttributes(this.fullscreenDiv, 'ima-fullscreen-div');\n  this.addClass(this.fullscreenDiv, 'ima-non-fullscreen');\n  this.fullscreenDiv.addEventListener('click', this.onAdFullscreenClick.bind(this), false);\n\n  this.adContainerDiv.appendChild(this.controlsDiv);\n  this.controlsDiv.appendChild(this.countdownDiv);\n  this.controlsDiv.appendChild(this.seekBarDiv);\n  this.controlsDiv.appendChild(this.playPauseDiv);\n  this.controlsDiv.appendChild(this.muteDiv);\n  this.controlsDiv.appendChild(this.sliderDiv);\n  this.controlsDiv.appendChild(this.fullscreenDiv);\n  this.seekBarDiv.appendChild(this.progressDiv);\n  this.sliderDiv.appendChild(this.sliderLevelDiv);\n};\n\n/**\n * Listener for clicks on the play/pause button during ad playback.\n */\nAdUi.prototype.onAdPlayPauseClick = function () {\n  this.controller.onAdPlayPauseClick();\n};\n\n/**\n * Listener for clicks on the play/pause button during ad playback.\n */\nAdUi.prototype.onAdMuteClick = function () {\n  this.controller.onAdMuteClick();\n};\n\n/**\n * Listener for clicks on the fullscreen button during ad playback.\n */\nAdUi.prototype.onAdFullscreenClick = function () {\n  this.controller.toggleFullscreen();\n};\n\n/**\n * Show pause and hide play button\n */\nAdUi.prototype.onAdsPaused = function () {\n  this.controller.sdkImpl.adPlaying = false;\n  this.addClass(this.playPauseDiv, 'ima-paused');\n  this.removeClass(this.playPauseDiv, 'ima-playing');\n  this.showAdControls();\n};\n\n/**\n * Show pause and hide play button\n */\nAdUi.prototype.onAdsResumed = function () {\n  this.onAdsPlaying();\n  this.showAdControls();\n};\n\n/**\n * Show play and hide pause button\n */\nAdUi.prototype.onAdsPlaying = function () {\n  this.controller.sdkImpl.adPlaying = true;\n  this.addClass(this.playPauseDiv, 'ima-playing');\n  this.removeClass(this.playPauseDiv, 'ima-paused');\n};\n\n/**\n * Takes data from the controller to update the UI.\n *\n * @param {number} currentTime Current time of the ad.\n * @param {number} remainingTime Remaining time of the ad.\n * @param {number} duration Duration of the ad.\n * @param {number} adPosition Index of the ad in the pod.\n * @param {number} totalAds Total number of ads in the pod.\n */\nAdUi.prototype.updateAdUi = function (currentTime, remainingTime, duration, adPosition, totalAds) {\n  // Update countdown timer data\n  const remainingMinutes = Math.floor(remainingTime / 60);\n  let remainingSeconds = Math.floor(remainingTime % 60);\n  if (remainingSeconds.toString().length < 2) {\n    remainingSeconds = '0' + remainingSeconds;\n  }\n  let podCount = ': ';\n  if (totalAds > 1) {\n    podCount = ' (' + adPosition + ' ' + this.controller.getSettings().adLabelNofN + ' ' + totalAds + '): ';\n  }\n  this.countdownDiv.innerHTML = this.controller.getSettings().adLabel + podCount + remainingMinutes + ':' + remainingSeconds;\n\n  // Update UI\n  const playProgressRatio = currentTime / duration;\n  const playProgressPercent = playProgressRatio * 100;\n  this.progressDiv.style.width = playProgressPercent + '%';\n};\n\n/**\n * Handles UI changes when the ad is unmuted.\n */\nAdUi.prototype.unmute = function () {\n  this.addClass(this.muteDiv, 'ima-non-muted');\n  this.removeClass(this.muteDiv, 'ima-muted');\n  this.sliderLevelDiv.style.width = this.controller.getPlayerVolume() * 100 + '%';\n};\n\n/**\n * Handles UI changes when the ad is muted.\n */\nAdUi.prototype.mute = function () {\n  this.addClass(this.muteDiv, 'ima-muted');\n  this.removeClass(this.muteDiv, 'ima-non-muted');\n  this.sliderLevelDiv.style.width = '0%';\n};\n\n/*\n * Listener for mouse down events during ad playback. Used for volume.\n */\nAdUi.prototype.onAdVolumeSliderMouseDown = function () {\n  document.addEventListener('mouseup', this.boundOnMouseUp, false);\n  document.addEventListener('mousemove', this.boundOnMouseMove, false);\n};\n\n/*\n * Mouse movement listener used for volume slider.\n */\nAdUi.prototype.onMouseMove = function (event) {\n  this.changeVolume(event);\n};\n\n/*\n * Mouse release listener used for volume slider.\n */\nAdUi.prototype.onMouseUp = function (event) {\n  this.changeVolume(event);\n  document.removeEventListener('mouseup', this.boundOnMouseUp);\n  document.removeEventListener('mousemove', this.boundOnMouseMove);\n};\n\n/*\n * Utility function to set volume and associated UI\n */\nAdUi.prototype.changeVolume = function (event) {\n  let percent = (event.clientX - this.sliderDiv.getBoundingClientRect().left) / this.sliderDiv.offsetWidth;\n  percent *= 100;\n  // Bounds value 0-100 if mouse is outside slider region.\n  percent = Math.min(Math.max(percent, 0), 100);\n  this.sliderLevelDiv.style.width = percent + '%';\n  if (this.percent == 0) {\n    this.addClass(this.muteDiv, 'ima-muted');\n    this.removeClass(this.muteDiv, 'ima-non-muted');\n  } else {\n    this.addClass(this.muteDiv, 'ima-non-muted');\n    this.removeClass(this.muteDiv, 'ima-muted');\n  }\n  this.controller.setVolume(percent / 100); // 0-1\n};\n\n/**\n * Show the ad container.\n */\nAdUi.prototype.showAdContainer = function () {\n  this.adContainerDiv.style.display = 'block';\n};\n\n/**\n * Hide the ad container\n */\nAdUi.prototype.hideAdContainer = function () {\n  this.adContainerDiv.style.display = 'none';\n};\n\n/**\n * Handles clicks on the ad container\n */\nAdUi.prototype.onAdContainerClick = function () {\n  if (this.isAdNonlinear) {\n    this.controller.togglePlayback();\n  }\n};\n\n/**\n * Resets the state of the ad ui.\n */\nAdUi.prototype.reset = function () {\n  this.hideAdContainer();\n};\n\n/**\n * Handles ad errors.\n */\nAdUi.prototype.onAdError = function () {\n  this.hideAdContainer();\n};\n\n/**\n * Handles ad break starting.\n *\n * @param {Object} adEvent The event fired by the IMA SDK.\n */\nAdUi.prototype.onAdBreakStart = function (adEvent) {\n  this.showAdContainer();\n\n  const contentType = adEvent.getAd().getContentType();\n  if (contentType === 'application/javascript' && !this.controller.getSettings().showControlsForJSAds) {\n    this.controlsDiv.style.display = 'none';\n  } else {\n    this.controlsDiv.style.display = 'block';\n  }\n  this.onAdsPlaying();\n  // Start with the ad controls minimized.\n  this.hideAdControls();\n};\n\n/**\n * Handles ad break ending.\n */\nAdUi.prototype.onAdBreakEnd = function () {\n  const currentAd = this.controller.getCurrentAd();\n  if (currentAd == null || // hide for post-roll only playlist\n  currentAd.isLinear()) {\n    // don't hide for non-linear ads\n    this.hideAdContainer();\n  }\n  this.controlsDiv.style.display = 'none';\n  this.countdownDiv.innerHTML = '';\n};\n\n/**\n * Handles when all ads have finished playing.\n */\nAdUi.prototype.onAllAdsCompleted = function () {\n  this.hideAdContainer();\n};\n\n/**\n * Handles when a linear ad starts.\n */\nAdUi.prototype.onLinearAdStart = function () {\n  // Don't bump container when controls are shown\n  this.removeClass(this.adContainerDiv, 'bumpable-ima-ad-container');\n  this.isAdNonlinear = false;\n};\n\n/**\n * Handles when a non-linear ad starts.\n */\nAdUi.prototype.onNonLinearAdLoad = function () {\n  // For non-linear ads that show after a linear ad. For linear ads, we show the\n  // ad container in onAdBreakStart to prevent blinking in pods.\n  this.adContainerDiv.style.display = 'block';\n  // Bump container when controls are shown\n  this.addClass(this.adContainerDiv, 'bumpable-ima-ad-container');\n  this.isAdNonlinear = true;\n};\n\nAdUi.prototype.onPlayerEnterFullscreen = function () {\n  this.addClass(this.fullscreenDiv, 'ima-fullscreen');\n  this.removeClass(this.fullscreenDiv, 'ima-non-fullscreen');\n};\n\nAdUi.prototype.onPlayerExitFullscreen = function () {\n  this.addClass(this.fullscreenDiv, 'ima-non-fullscreen');\n  this.removeClass(this.fullscreenDiv, 'ima-fullscreen');\n};\n\n/**\n * Called when the player volume changes.\n *\n * @param {number} volume The new player volume.\n */\nAdUi.prototype.onPlayerVolumeChanged = function (volume) {\n  if (volume == 0) {\n    this.addClass(this.muteDiv, 'ima-muted');\n    this.removeClass(this.muteDiv, 'ima-non-muted');\n    this.sliderLevelDiv.style.width = '0%';\n  } else {\n    this.addClass(this.muteDiv, 'ima-non-muted');\n    this.removeClass(this.muteDiv, 'ima-muted');\n    this.sliderLevelDiv.style.width = volume * 100 + '%';\n  }\n};\n\n/**\n * Shows ad controls on mouseover.\n */\nAdUi.prototype.showAdControls = function () {\n  const { disableAdControls } = this.controller.getSettings();\n  if (!disableAdControls) {\n    this.addClass(this.controlsDiv, 'ima-controls-div-showing');\n  }\n};\n\n/**\n * Hide the ad controls.\n */\nAdUi.prototype.hideAdControls = function () {\n  this.removeClass(this.controlsDiv, 'ima-controls-div-showing');\n};\n\n/**\n * Assigns the unique id and class names to the given element as well as the\n * style class.\n * @param {HTMLElement} element Element that needs the controlName assigned.\n * @param {string} controlName Control name to assign.\n */\nAdUi.prototype.assignControlAttributes = function (element, controlName) {\n  element.id = this.controlPrefix + controlName;\n  element.className = this.controlPrefix + controlName + ' ' + controlName;\n};\n\n/**\n * Returns a regular expression to test a string for the given className.\n *\n * @param {string} className The name of the class.\n * @return {RegExp} The regular expression used to test for that class.\n */\nAdUi.prototype.getClassRegexp = function (className) {\n  // Matches on\n  // (beginning of string OR NOT word char)\n  // classname\n  // (negative lookahead word char OR end of string)\n  return new RegExp('(^|[^A-Za-z-])' + className + '((?![A-Za-z-])|$)', 'gi');\n};\n\n/**\n * Returns whether or not the provided element has the provied class in its\n * className.\n * @param {HTMLElement} element Element to tes.t\n * @param {string} className Class to look for.\n * @return {boolean} True if element has className in class list. False\n *     otherwise.\n */\nAdUi.prototype.elementHasClass = function (element, className) {\n  const classRegexp = this.getClassRegexp(className);\n  return classRegexp.test(element.className);\n};\n\n/**\n * Adds a class to the given element if it doesn't already have the class\n * @param {HTMLElement} element Element to which the class will be added.\n * @param {string} classToAdd Class to add.\n */\nAdUi.prototype.addClass = function (element, classToAdd) {\n  element.className = element.className.trim() + ' ' + classToAdd;\n};\n\n/**\n * Removes a class from the given element if it has the given class\n *\n * @param {HTMLElement} element Element from which the class will be removed.\n * @param {string} classToRemove Class to remove.\n */\nAdUi.prototype.removeClass = function (element, classToRemove) {\n  const classRegexp = this.getClassRegexp(classToRemove);\n  element.className = element.className.trim().replace(classRegexp, '');\n};\n\n/**\n * @return {HTMLElement} The div for the ad container.\n */\nAdUi.prototype.getAdContainerDiv = function () {\n  return this.adContainerDiv;\n};\n\n/**\n * Changes the flag to show or hide the ad countdown timer.\n *\n * @param {boolean} showCountdownIn Show or hide the countdown timer.\n */\nAdUi.prototype.setShowCountdown = function (showCountdownIn) {\n  this.showCountdown = showCountdownIn;\n  this.countdownDiv.style.display = this.showCountdown ? 'block' : 'none';\n};\n\nvar name = \"videojs-ima\";\nvar version = \"1.11.0\";\nvar license = \"Apache-2.0\";\nvar main = \"./dist/videojs.ima.js\";\nvar module$1 = \"./dist/videojs.ima.es.js\";\nvar author = { \"name\": \"Google Inc.\" };\nvar engines = { \"node\": \">=0.8.0\" };\nvar scripts = { \"contBuild\": \"watch 'npm run rollup:max' src\", \"predevServer\": \"echo \\\"Starting up server on localhost:8000.\\\"\", \"devServer\": \"npm-run-all -p testServer contBuild\", \"lint\": \"eslint \\\"src/**/*.js\\\"\", \"rollup\": \"npm-run-all rollup:*\", \"rollup:max\": \"rollup -c configs/rollup.config.js\", \"rollup:es\": \"rollup -c configs/rollup.config.es.js\", \"rollup:min\": \"rollup -c configs/rollup.config.min.js\", \"pretest\": \"npm run rollup\", \"start\": \"npm run devServer\", \"test\": \"npm-run-all test:*\", \"test:vjs6\": \"npm install video.js@6 --no-save && npm-run-all -p -r testServer webdriver\", \"test:vjs7\": \"npm install video.js@7 --no-save && npm-run-all -p -r testServer webdriver\", \"testServer\": \"http-server --cors -p 8000 --silent\", \"preversion\": \"node scripts/preversion.js && npm run lint && npm test\", \"version\": \"node scripts/version.js\", \"postversion\": \"node scripts/postversion.js\", \"webdriver\": \"mocha test/webdriver/*.js --no-timeouts\" };\nvar repository = { \"type\": \"git\", \"url\": \"https://github.com/googleads/videojs-ima\" };\nvar files = [\"CHANGELOG.md\", \"LICENSE\", \"README.md\", \"dist/\", \"src/\"];\nvar peerDependencies = { \"video.js\": \"^5.19.2 || ^6 || ^7\" };\nvar dependencies = { \"@hapi/cryptiles\": \"^5.1.0\", \"can-autoplay\": \"^3.0.2\", \"extend\": \">=3.0.2\", \"videojs-contrib-ads\": \"^6.9.0\" };\nvar devDependencies = { \"axios\": \"^0.25.0\", \"babel-core\": \"^6.26.3\", \"babel-preset-env\": \"^1.7.0\", \"child_process\": \"^1.0.2\", \"chromedriver\": \"^102.0.0\", \"conventional-changelog-cli\": \"^2.2.2\", \"conventional-changelog-videojs\": \"^3.0.2\", \"ecstatic\": \"^4.1.4\", \"eslint\": \"^8.8.0\", \"eslint-config-google\": \"^0.9.1\", \"eslint-plugin-jsdoc\": \"^3.15.1\", \"geckodriver\": \"^2.0.4\", \"http-server\": \"^14.1.0\", \"ini\": \">=1.3.7\", \"mocha\": \"^9.2.0\", \"npm-run-all\": \"^4.1.5\", \"path\": \"^0.12.7\", \"protractor\": \"^7.0.0\", \"rimraf\": \"^2.7.1\", \"rollup\": \"^0.51.8\", \"rollup-plugin-babel\": \"^3.0.7\", \"rollup-plugin-copy\": \"^0.2.3\", \"rollup-plugin-json\": \"^2.3.1\", \"rollup-plugin-uglify\": \"^2.0.1\", \"selenium-webdriver\": \"^3.6.0\", \"uglify-es\": \"^3.3.9\", \"video.js\": \"^7.17.0\", \"watch\": \"^0.13.0\", \"webdriver-manager\": \"^12.1.7\", \"xmldom\": \"^0.6.0\" };\nvar keywords = [\"videojs\", \"videojs-plugin\"];\nvar pkg = {\n\tname: name,\n\tversion: version,\n\tlicense: license,\n\tmain: main,\n\tmodule: module$1,\n\tauthor: author,\n\tengines: engines,\n\tscripts: scripts,\n\trepository: repository,\n\tfiles: files,\n\tpeerDependencies: peerDependencies,\n\tdependencies: dependencies,\n\tdevDependencies: devDependencies,\n\tkeywords: keywords\n};\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * IMA SDK integration plugin for Video.js. For more information see\n * https://www.github.com/googleads/videojs-ima\n */\n\n/**\n * Implementation of the IMA SDK for the plugin.\n *\n * @param {Object} controller Reference to the parent controller.\n *\n * @constructor\n * @struct\n * @final\n */\nconst SdkImpl = function (controller) {\n  /**\n   * Plugin controller.\n   */\n  this.controller = controller;\n\n  /**\n   * IMA SDK AdDisplayContainer.\n   */\n  this.adDisplayContainer = null;\n\n  /**\n   * True if the AdDisplayContainer has been initialized. False otherwise.\n   */\n  this.adDisplayContainerInitialized = false;\n\n  /**\n   * IMA SDK AdsLoader\n   */\n  this.adsLoader = null;\n\n  /**\n   * IMA SDK AdsManager\n   */\n  this.adsManager = null;\n\n  /**\n   * IMA SDK AdsRenderingSettings.\n   */\n  this.adsRenderingSettings = null;\n\n  /**\n   * VAST, VMAP, or ad rules response. Used in lieu of fetching a response\n   * from an ad tag URL.\n   */\n  this.adsResponse = null;\n\n  /**\n   * Current IMA SDK Ad.\n   */\n  this.currentAd = null;\n\n  /**\n   * Timer used to track ad progress.\n   */\n  this.adTrackingTimer = null;\n\n  /**\n   * True if ALL_ADS_COMPLETED has fired, false until then.\n   */\n  this.allAdsCompleted = false;\n\n  /**\n   * True if ads are currently displayed, false otherwise.\n   * True regardless of ad pause state if an ad is currently being displayed.\n   */\n  this.adsActive = false;\n\n  /**\n   * True if ad is currently playing, false if ad is paused or ads are not\n   * currently displayed.\n   */\n  this.adPlaying = false;\n\n  /**\n   * True if the ad is muted, false otherwise.\n   */\n  this.adMuted = false;\n\n  /**\n   * Listener to be called to trigger manual ad break playback.\n   */\n  this.adBreakReadyListener = undefined;\n\n  /**\n   * Tracks whether or not we have already called adsLoader.contentComplete().\n   */\n  this.contentCompleteCalled = false;\n\n  /**\n   * True if the ad has timed out.\n   */\n  this.isAdTimedOut = false;\n\n  /**\n   * Stores the dimensions for the ads manager.\n   */\n  this.adsManagerDimensions = {\n    width: 0,\n    height: 0\n  };\n\n  /**\n   * Boolean flag to enable manual ad break playback.\n   */\n  this.autoPlayAdBreaks = true;\n  if (this.controller.getSettings().autoPlayAdBreaks === false) {\n    this.autoPlayAdBreaks = false;\n  }\n\n  // Set SDK settings from plugin settings.\n  if (this.controller.getSettings().locale) {\n    /* eslint no-undef: 'error' */\n    /* global google */\n    google.ima.settings.setLocale(this.controller.getSettings().locale);\n  }\n  if (this.controller.getSettings().disableFlashAds) {\n    google.ima.settings.setDisableFlashAds(this.controller.getSettings().disableFlashAds);\n  }\n  if (this.controller.getSettings().disableCustomPlaybackForIOS10Plus) {\n    google.ima.settings.setDisableCustomPlaybackForIOS10Plus(this.controller.getSettings().disableCustomPlaybackForIOS10Plus);\n  }\n\n  if (this.controller.getSettings().ppid) {\n    google.ima.settings.setPpid(this.controller.getSettings().ppid);\n  }\n\n  if (this.controller.getSettings().featureFlags) {\n    google.ima.settings.setFeatureFlags(this.controller.getSettings().featureFlags);\n  }\n};\n\n/**\n * Creates and initializes the IMA SDK objects.\n */\nSdkImpl.prototype.initAdObjects = function () {\n  this.adDisplayContainer = new google.ima.AdDisplayContainer(this.controller.getAdContainerDiv(), this.controller.getContentPlayer());\n\n  this.adsLoader = new google.ima.AdsLoader(this.adDisplayContainer);\n\n  this.adsLoader.getSettings().setVpaidMode(google.ima.ImaSdkSettings.VpaidMode.ENABLED);\n  if (this.controller.getSettings().vpaidAllowed == false) {\n    this.adsLoader.getSettings().setVpaidMode(google.ima.ImaSdkSettings.VpaidMode.DISABLED);\n  }\n  if (this.controller.getSettings().vpaidMode !== undefined) {\n    this.adsLoader.getSettings().setVpaidMode(this.controller.getSettings().vpaidMode);\n  }\n\n  if (this.controller.getSettings().locale) {\n    this.adsLoader.getSettings().setLocale(this.controller.getSettings().locale);\n  }\n\n  if (this.controller.getSettings().numRedirects) {\n    this.adsLoader.getSettings().setNumRedirects(this.controller.getSettings().numRedirects);\n  }\n\n  if (this.controller.getSettings().sessionId) {\n    this.adsLoader.getSettings().setSessionId(this.controller.getSettings().sessionId);\n  }\n\n  this.adsLoader.getSettings().setPlayerType('videojs-ima');\n  this.adsLoader.getSettings().setPlayerVersion(pkg.version);\n  this.adsLoader.getSettings().setAutoPlayAdBreaks(this.autoPlayAdBreaks);\n\n  this.adsLoader.addEventListener(google.ima.AdsManagerLoadedEvent.Type.ADS_MANAGER_LOADED, this.onAdsManagerLoaded.bind(this), false);\n  this.adsLoader.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, this.onAdsLoaderError.bind(this), false);\n\n  this.controller.playerWrapper.vjsPlayer.trigger({\n    type: 'ads-loader',\n    adsLoader: this.adsLoader\n  });\n};\n\n/**\n * Creates the AdsRequest and request ads through the AdsLoader.\n */\nSdkImpl.prototype.requestAds = function () {\n  const adsRequest = new google.ima.AdsRequest();\n  if (this.controller.getSettings().adTagUrl) {\n    adsRequest.adTagUrl = this.controller.getSettings().adTagUrl;\n  } else {\n    adsRequest.adsResponse = this.controller.getSettings().adsResponse;\n  }\n  if (this.controller.getSettings().forceNonLinearFullSlot) {\n    adsRequest.forceNonLinearFullSlot = true;\n  }\n\n  if (this.controller.getSettings().vastLoadTimeout) {\n    adsRequest.vastLoadTimeout = this.controller.getSettings().vastLoadTimeout;\n  }\n\n  if (this.controller.getSettings().omidMode) {\n    adsRequest.omidAccessModeRules = {};\n    const omidValues = this.controller.getSettings().omidMode;\n\n    if (omidValues.FULL) {\n      adsRequest.omidAccessModeRules[google.ima.OmidAccessMode.FULL] = omidValues.FULL;\n    }\n    if (omidValues.DOMAIN) {\n      adsRequest.omidAccessModeRules[google.ima.OmidAccessMode.DOMAIN] = omidValues.DOMAIN;\n    }\n    if (omidValues.LIMITED) {\n      adsRequest.omidAccessModeRules[google.ima.OmidAccessMode.LIMITED] = omidValues.LIMITED;\n    }\n  }\n\n  adsRequest.linearAdSlotWidth = this.controller.getPlayerWidth();\n  adsRequest.linearAdSlotHeight = this.controller.getPlayerHeight();\n  adsRequest.nonLinearAdSlotWidth = this.controller.getSettings().nonLinearWidth || this.controller.getPlayerWidth();\n  adsRequest.nonLinearAdSlotHeight = this.controller.getSettings().nonLinearHeight || this.controller.getPlayerHeight();\n  adsRequest.setAdWillAutoPlay(this.controller.adsWillAutoplay());\n  adsRequest.setAdWillPlayMuted(this.controller.adsWillPlayMuted());\n\n  // Populate the adsRequestproperties with those provided in the AdsRequest\n  // object in the settings.\n  let providedAdsRequest = this.controller.getSettings().adsRequest;\n  if (providedAdsRequest && typeof providedAdsRequest === 'object') {\n    Object.keys(providedAdsRequest).forEach(key => {\n      adsRequest[key] = providedAdsRequest[key];\n    });\n  }\n\n  this.adsLoader.requestAds(adsRequest);\n  this.controller.playerWrapper.vjsPlayer.trigger({\n    type: 'ads-request',\n    AdsRequest: adsRequest\n  });\n};\n\n/**\n * Listener for the ADS_MANAGER_LOADED event. Creates the AdsManager,\n * sets up event listeners, and triggers the 'adsready' event for\n * videojs-ads-contrib.\n *\n * @param {google.ima.AdsManagerLoadedEvent} adsManagerLoadedEvent Fired when\n *     the AdsManager loads.\n */\nSdkImpl.prototype.onAdsManagerLoaded = function (adsManagerLoadedEvent) {\n  this.createAdsRenderingSettings();\n\n  this.adsManager = adsManagerLoadedEvent.getAdsManager(this.controller.getContentPlayheadTracker(), this.adsRenderingSettings);\n\n  this.adsManager.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, this.onAdError.bind(this));\n  this.adsManager.addEventListener(google.ima.AdEvent.Type.AD_BREAK_READY, this.onAdBreakReady.bind(this));\n  this.adsManager.addEventListener(google.ima.AdEvent.Type.CONTENT_PAUSE_REQUESTED, this.onContentPauseRequested.bind(this));\n  this.adsManager.addEventListener(google.ima.AdEvent.Type.CONTENT_RESUME_REQUESTED, this.onContentResumeRequested.bind(this));\n  this.adsManager.addEventListener(google.ima.AdEvent.Type.ALL_ADS_COMPLETED, this.onAllAdsCompleted.bind(this));\n\n  this.adsManager.addEventListener(google.ima.AdEvent.Type.LOADED, this.onAdLoaded.bind(this));\n  this.adsManager.addEventListener(google.ima.AdEvent.Type.STARTED, this.onAdStarted.bind(this));\n  this.adsManager.addEventListener(google.ima.AdEvent.Type.COMPLETE, this.onAdComplete.bind(this));\n  this.adsManager.addEventListener(google.ima.AdEvent.Type.SKIPPED, this.onAdComplete.bind(this));\n  this.adsManager.addEventListener(google.ima.AdEvent.Type.LOG, this.onAdLog.bind(this));\n  this.adsManager.addEventListener(google.ima.AdEvent.Type.PAUSED, this.onAdPaused.bind(this));\n  this.adsManager.addEventListener(google.ima.AdEvent.Type.RESUMED, this.onAdResumed.bind(this));\n\n  this.controller.playerWrapper.vjsPlayer.trigger({\n    type: 'ads-manager',\n    adsManager: this.adsManager\n  });\n\n  if (!this.autoPlayAdBreaks) {\n    this.initAdsManager();\n  }\n\n  const { preventLateAdStart } = this.controller.getSettings();\n\n  if (!preventLateAdStart) {\n    this.controller.onAdsReady();\n  } else if (preventLateAdStart && !this.isAdTimedOut) {\n    this.controller.onAdsReady();\n  }\n\n  if (this.controller.getSettings().adsManagerLoadedCallback) {\n    this.controller.getSettings().adsManagerLoadedCallback();\n  }\n};\n\n/**\n * Listener for errors fired by the AdsLoader.\n * @param {google.ima.AdErrorEvent} event The error event thrown by the\n *     AdsLoader. See\n *     https://developers.google.com/interactive-media-ads/docs/sdks/html5/client-side/reference/js/google.ima.AdError#.Type\n */\nSdkImpl.prototype.onAdsLoaderError = function (event) {\n  window.console.warn('AdsLoader error: ' + event.getError());\n  this.controller.onErrorLoadingAds(event);\n  if (this.adsManager) {\n    this.adsManager.destroy();\n  }\n};\n\n/**\n * Initialize the ads manager.\n */\nSdkImpl.prototype.initAdsManager = function () {\n  try {\n    const initWidth = this.controller.getPlayerWidth();\n    const initHeight = this.controller.getPlayerHeight();\n    this.adsManagerDimensions.width = initWidth;\n    this.adsManagerDimensions.height = initHeight;\n    this.adsManager.init(initWidth, initHeight, google.ima.ViewMode.NORMAL);\n    this.adsManager.setVolume(this.controller.getPlayerVolume());\n    this.initializeAdDisplayContainer();\n  } catch (adError) {\n    this.onAdError(adError);\n  }\n};\n\n/**\n * Create AdsRenderingSettings for the IMA SDK.\n */\nSdkImpl.prototype.createAdsRenderingSettings = function () {\n  this.adsRenderingSettings = new google.ima.AdsRenderingSettings();\n  this.adsRenderingSettings.restoreCustomPlaybackStateOnAdBreakComplete = true;\n  if (this.controller.getSettings().adsRenderingSettings) {\n    for (let setting in this.controller.getSettings().adsRenderingSettings) {\n      if (setting !== '') {\n        this.adsRenderingSettings[setting] = this.controller.getSettings().adsRenderingSettings[setting];\n      }\n    }\n  }\n};\n\n/**\n * Listener for errors thrown by the AdsManager.\n * @param {google.ima.AdErrorEvent} adErrorEvent The error event thrown by\n *     the AdsManager.\n */\nSdkImpl.prototype.onAdError = function (adErrorEvent) {\n  const errorMessage = adErrorEvent.getError !== undefined ? adErrorEvent.getError() : adErrorEvent.stack;\n  window.console.warn('Ad error: ' + errorMessage);\n\n  this.adsManager.destroy();\n  this.controller.onAdError(adErrorEvent);\n\n  // reset these so consumers don't think we are still in an ad break,\n  // but reset them after any prior cleanup happens\n  this.adsActive = false;\n  this.adPlaying = false;\n};\n\n/**\n * Listener for AD_BREAK_READY. Passes event on to publisher's listener.\n * @param {google.ima.AdEvent} adEvent AdEvent thrown by the AdsManager.\n */\nSdkImpl.prototype.onAdBreakReady = function (adEvent) {\n  this.adBreakReadyListener(adEvent);\n};\n\n/**\n * Pauses the content video and displays the ad container so ads can play.\n * @param {google.ima.AdEvent} adEvent The AdEvent thrown by the AdsManager.\n */\nSdkImpl.prototype.onContentPauseRequested = function (adEvent) {\n  this.adsActive = true;\n  this.adPlaying = true;\n  this.controller.onAdBreakStart(adEvent);\n};\n\n/**\n * Resumes content video and hides the ad container.\n * @param {google.ima.AdEvent} adEvent The AdEvent thrown by the AdsManager.\n */\nSdkImpl.prototype.onContentResumeRequested = function (adEvent) {\n  this.adsActive = false;\n  this.adPlaying = false;\n  this.controller.onAdBreakEnd();\n  // Hide controls in case of future non-linear ads. They'll be unhidden in\n  // content_pause_requested.\n};\n\n/**\n * Records that ads have completed and calls contentAndAdsEndedListeners\n * if content is also complete.\n * @param {google.ima.AdEvent} adEvent The AdEvent thrown by the AdsManager.\n */\nSdkImpl.prototype.onAllAdsCompleted = function (adEvent) {\n  this.allAdsCompleted = true;\n  this.controller.onAllAdsCompleted();\n};\n\n/**\n * Starts the content video when a non-linear ad is loaded.\n * @param {google.ima.AdEvent} adEvent The AdEvent thrown by the AdsManager.\n */\nSdkImpl.prototype.onAdLoaded = function (adEvent) {\n  if (!adEvent.getAd().isLinear()) {\n    this.controller.onNonLinearAdLoad();\n    this.controller.playContent();\n  }\n};\n\n/**\n * Starts the interval timer to check the current ad time when an ad starts\n * playing.\n * @param {google.ima.AdEvent} adEvent The AdEvent thrown by the AdsManager.\n */\nSdkImpl.prototype.onAdStarted = function (adEvent) {\n  this.currentAd = adEvent.getAd();\n  if (this.currentAd.isLinear()) {\n    this.adTrackingTimer = setInterval(this.onAdPlayheadTrackerInterval.bind(this), 250);\n    this.controller.onLinearAdStart();\n  } else {\n    this.controller.onNonLinearAdStart();\n  }\n};\n\n/**\n * Handles an ad click. Puts the player UI in a paused state.\n */\nSdkImpl.prototype.onAdPaused = function () {\n  this.controller.onAdsPaused();\n};\n\n/**\n * Syncs controls when an ad resumes.\n * @param {google.ima.AdEvent} adEvent The AdEvent thrown by the AdsManager.\n */\nSdkImpl.prototype.onAdResumed = function (adEvent) {\n  this.controller.onAdsResumed();\n};\n\n/**\n * Clears the interval timer for current ad time when an ad completes.\n */\nSdkImpl.prototype.onAdComplete = function () {\n  if (this.currentAd.isLinear()) {\n    clearInterval(this.adTrackingTimer);\n  }\n};\n\n/**\n * Handles ad log messages.\n * @param {google.ima.AdEvent} adEvent The AdEvent thrown by the AdsManager.\n */\nSdkImpl.prototype.onAdLog = function (adEvent) {\n  this.controller.onAdLog(adEvent);\n};\n\n/**\n * Gets the current time and duration of the ad and calls the method to\n * update the ad UI.\n */\nSdkImpl.prototype.onAdPlayheadTrackerInterval = function () {\n  if (this.adsManager === null) return;\n  const remainingTime = this.adsManager.getRemainingTime();\n  const duration = this.currentAd.getDuration();\n  let currentTime = duration - remainingTime;\n  currentTime = currentTime > 0 ? currentTime : 0;\n  let totalAds = 0;\n  let adPosition;\n  if (this.currentAd.getAdPodInfo()) {\n    adPosition = this.currentAd.getAdPodInfo().getAdPosition();\n    totalAds = this.currentAd.getAdPodInfo().getTotalAds();\n  }\n\n  this.controller.onAdPlayheadUpdated(currentTime, remainingTime, duration, adPosition, totalAds);\n};\n\n/**\n * Called by the player wrapper when content completes.\n */\nSdkImpl.prototype.onContentComplete = function () {\n  if (this.adsLoader) {\n    this.adsLoader.contentComplete();\n    this.contentCompleteCalled = true;\n  }\n\n  if (this.adsManager && this.adsManager.getCuePoints() && !this.adsManager.getCuePoints().includes(-1) || !this.adsManager) {\n    this.controller.onNoPostroll();\n  }\n\n  if (this.allAdsCompleted) {\n    this.controller.onContentAndAdsCompleted();\n  }\n};\n\n/**\n * Called when the player is disposed.\n */\nSdkImpl.prototype.onPlayerDisposed = function () {\n  if (this.adTrackingTimer) {\n    clearInterval(this.adTrackingTimer);\n  }\n  if (this.adsManager) {\n    this.adsManager.destroy();\n    this.adsManager = null;\n  }\n};\n\nSdkImpl.prototype.onPlayerReadyForPreroll = function () {\n  if (this.autoPlayAdBreaks) {\n    this.initAdsManager();\n    try {\n      this.controller.showAdContainer();\n      // Sync ad volume with content volume.\n      this.adsManager.setVolume(this.controller.getPlayerVolume());\n      this.adsManager.start();\n    } catch (adError) {\n      this.onAdError(adError);\n    }\n  }\n};\n\nSdkImpl.prototype.onAdTimeout = function () {\n  this.isAdTimedOut = true;\n};\n\nSdkImpl.prototype.onPlayerReady = function () {\n  this.initAdObjects();\n\n  if ((this.controller.getSettings().adTagUrl || this.controller.getSettings().adsResponse) && this.controller.getSettings().requestMode === 'onLoad') {\n    this.requestAds();\n  }\n};\n\nSdkImpl.prototype.onPlayerEnterFullscreen = function () {\n  if (this.adsManager) {\n    this.adsManager.resize(window.screen.width, window.screen.height, google.ima.ViewMode.FULLSCREEN);\n  }\n};\n\nSdkImpl.prototype.onPlayerExitFullscreen = function () {\n  if (this.adsManager) {\n    this.adsManager.resize(this.controller.getPlayerWidth(), this.controller.getPlayerHeight(), google.ima.ViewMode.NORMAL);\n  }\n};\n\n/**\n * Called when the player volume changes.\n *\n * @param {number} volume The new player volume.\n */\nSdkImpl.prototype.onPlayerVolumeChanged = function (volume) {\n  if (this.adsManager) {\n    this.adsManager.setVolume(volume);\n  }\n\n  if (volume == 0) {\n    this.adMuted = true;\n  } else {\n    this.adMuted = false;\n  }\n};\n\n/**\n * Called when the player wrapper detects that the player has been resized.\n *\n * @param {number} width The post-resize width of the player.\n * @param {number} height The post-resize height of the player.\n */\nSdkImpl.prototype.onPlayerResize = function (width, height) {\n  if (this.adsManager) {\n    this.adsManagerDimensions.width = width;\n    this.adsManagerDimensions.height = height;\n    /* eslint no-undef: 'error' */\n    this.adsManager.resize(width, height, google.ima.ViewMode.NORMAL);\n  }\n};\n\n/**\n * @return {Object} The current ad.\n */\nSdkImpl.prototype.getCurrentAd = function () {\n  return this.currentAd;\n};\n\n/**\n * Listener JSDoc for ESLint. This listener can be passed to\n * setAdBreakReadyListener.\n * @callback listener\n */\n\n/**\n * Sets the listener to be called to trigger manual ad break playback.\n * @param {listener} listener The listener to be called to trigger manual ad\n *     break playback.\n */\nSdkImpl.prototype.setAdBreakReadyListener = function (listener) {\n  this.adBreakReadyListener = listener;\n};\n\n/**\n * @return {boolean} True if an ad is currently playing. False otherwise.\n */\nSdkImpl.prototype.isAdPlaying = function () {\n  return this.adPlaying;\n};\n\n/**\n * @return {boolean} True if an ad is currently playing. False otherwise.\n */\nSdkImpl.prototype.isAdMuted = function () {\n  return this.adMuted;\n};\n\n/**\n * Pause ads.\n */\nSdkImpl.prototype.pauseAds = function () {\n  this.adsManager.pause();\n  this.adPlaying = false;\n};\n\n/**\n * Resume ads.\n */\nSdkImpl.prototype.resumeAds = function () {\n  this.adsManager.resume();\n  this.adPlaying = true;\n};\n\n/**\n * Unmute ads.\n */\nSdkImpl.prototype.unmute = function () {\n  this.adsManager.setVolume(1);\n  this.adMuted = false;\n};\n\n/**\n * Mute ads.\n */\nSdkImpl.prototype.mute = function () {\n  this.adsManager.setVolume(0);\n  this.adMuted = true;\n};\n\n/**\n * Set the volume of the ads. 0-1.\n *\n * @param {number} volume The new volume.\n */\nSdkImpl.prototype.setVolume = function (volume) {\n  this.adsManager.setVolume(volume);\n  if (volume == 0) {\n    this.adMuted = true;\n  } else {\n    this.adMuted = false;\n  }\n};\n\n/**\n * Initializes the AdDisplayContainer. On mobile, this must be done as a\n * result of user action.\n */\nSdkImpl.prototype.initializeAdDisplayContainer = function () {\n  if (this.adDisplayContainer) {\n    if (!this.adDisplayContainerInitialized) {\n      this.adDisplayContainer.initialize();\n      this.adDisplayContainerInitialized = true;\n    }\n  }\n};\n\n/**\n * Called by publishers in manual ad break playback mode to start an ad\n * break.\n */\nSdkImpl.prototype.playAdBreak = function () {\n  if (!this.autoPlayAdBreaks) {\n    this.controller.showAdContainer();\n    // Sync ad volume with content volume.\n    this.adsManager.setVolume(this.controller.getPlayerVolume());\n    this.adsManager.start();\n  }\n};\n\n/**\n * Callback JSDoc for ESLint. This callback can be passed to addEventListener.\n * @callback callback\n */\n\n/**\n * Ads an EventListener to the AdsManager. For a list of available events,\n * see\n * https://developers.google.com/interactive-media-ads/docs/sdks/html5/client-side/reference/js/google.ima.AdEvent#.Type\n * @param {google.ima.AdEvent.Type} event The AdEvent.Type for which to\n *     listen.\n * @param {callback} callback The method to call when the event is fired.\n */\nSdkImpl.prototype.addEventListener = function (event, callback) {\n  if (this.adsManager) {\n    this.adsManager.addEventListener(event, callback);\n  }\n};\n\n/**\n * Returns the instance of the AdsManager.\n * @return {google.ima.AdsManager} The AdsManager being used by the plugin.\n */\nSdkImpl.prototype.getAdsManager = function () {\n  return this.adsManager;\n};\n\n/**\n * Reset the SDK implementation.\n */\nSdkImpl.prototype.reset = function () {\n  this.adsActive = false;\n  this.adPlaying = false;\n  if (this.adTrackingTimer) {\n    // If this is called while an ad is playing, stop trying to get that\n    // ad's current time.\n    clearInterval(this.adTrackingTimer);\n  }\n  if (this.adsManager) {\n    this.adsManager.destroy();\n    this.adsManager = null;\n  }\n  if (this.adsLoader && !this.contentCompleteCalled) {\n    this.adsLoader.contentComplete();\n  }\n  this.contentCompleteCalled = false;\n  this.allAdsCompleted = false;\n};\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * IMA SDK integration plugin for Video.js. For more information see\n * https://www.github.com/googleads/videojs-ima\n */\n/**\n * The grand coordinator of the plugin. Facilitates communication between all\n * other plugin classes.\n *\n * @param {Object} player Instance of the video.js player.\n * @param {Object} options Options provided by the implementation.\n * @constructor\n * @struct\n * @final\n */\nconst Controller = function (player, options) {\n  /**\n   * Stores user-provided settings.\n   * @type {Object}\n   */\n  this.settings = {};\n\n  /**\n   * Content and ads ended listeners passed by the publisher to the plugin.\n   * These will be called when the plugin detects that content *and all\n   * ads* have completed. This differs from the contentEndedListeners in that\n   * contentEndedListeners will fire between content ending and a post-roll\n   * playing, whereas the contentAndAdsEndedListeners will fire after the\n   * post-roll completes.\n   */\n  this.contentAndAdsEndedListeners = [];\n\n  /**\n   * Whether or not we are running on a mobile platform.\n   */\n  this.isMobile = navigator.userAgent.match(/iPhone/i) || navigator.userAgent.match(/iPad/i) || navigator.userAgent.match(/Android/i);\n\n  /**\n   * Whether or not we are running on an iOS platform.\n   */\n  this.isIos = navigator.userAgent.match(/iPhone/i) || navigator.userAgent.match(/iPad/i);\n\n  this.initWithSettings(options);\n\n  /**\n   * Stores contrib-ads default settings.\n   */\n  const contribAdsDefaults = {\n    debug: this.settings.debug,\n    timeout: this.settings.timeout,\n    prerollTimeout: this.settings.prerollTimeout\n  };\n  const adsPluginSettings = Object.assign({}, contribAdsDefaults, options.contribAdsSettings || {});\n\n  this.playerWrapper = new PlayerWrapper(player, adsPluginSettings, this);\n  this.adUi = new AdUi(this);\n  this.sdkImpl = new SdkImpl(this);\n};\n\nController.IMA_DEFAULTS = {\n  adLabel: 'Advertisement',\n  adLabelNofN: 'of',\n  debug: false,\n  disableAdControls: false,\n  prerollTimeout: 1000,\n  preventLateAdStart: false,\n  requestMode: 'onLoad',\n  showControlsForJSAds: true,\n  timeout: 5000\n};\n\n/**\n * Extends the settings to include user-provided settings.\n *\n * @param {Object} options Options to be used in initialization.\n */\nController.prototype.initWithSettings = function (options) {\n  this.settings = Object.assign({}, Controller.IMA_DEFAULTS, options || {});\n\n  this.warnAboutDeprecatedSettings();\n\n  // Default showing countdown timer to true.\n  this.showCountdown = true;\n  if (this.settings.showCountdown === false) {\n    this.showCountdown = false;\n  }\n};\n\n/**\n * Logs console warnings when deprecated settings are used.\n */\nController.prototype.warnAboutDeprecatedSettings = function () {\n  const deprecatedSettings = ['adWillAutoplay', 'adsWillAutoplay', 'adWillPlayMuted', 'adsWillPlayMuted'];\n  deprecatedSettings.forEach(setting => {\n    if (this.settings[setting] !== undefined) {\n      console.warn('WARNING: videojs.ima setting ' + setting + ' is deprecated');\n    }\n  });\n};\n\n/**\n * Return the settings object.\n *\n * @return {Object} The settings object.\n */\nController.prototype.getSettings = function () {\n  return this.settings;\n};\n\n/**\n * Return whether or not we're in a mobile environment.\n *\n * @return {boolean} True if running on mobile, false otherwise.\n */\nController.prototype.getIsMobile = function () {\n  return this.isMobile;\n};\n\n/**\n * Return whether or not we're in an iOS environment.\n *\n * @return {boolean} True if running on iOS, false otherwise.\n */\nController.prototype.getIsIos = function () {\n  return this.isIos;\n};\n\n/**\n * Inject the ad container div into the DOM.\n *\n * @param{HTMLElement} adContainerDiv The ad container div.\n */\nController.prototype.injectAdContainerDiv = function (adContainerDiv) {\n  this.playerWrapper.injectAdContainerDiv(adContainerDiv);\n};\n\n/**\n * @return {HTMLElement} The div for the ad container.\n */\nController.prototype.getAdContainerDiv = function () {\n  return this.adUi.getAdContainerDiv();\n};\n\n/**\n * @return {Object} The content player.\n */\nController.prototype.getContentPlayer = function () {\n  return this.playerWrapper.getContentPlayer();\n};\n\n/**\n * Returns the content playhead tracker.\n *\n * @return {Object} The content playhead tracker.\n */\nController.prototype.getContentPlayheadTracker = function () {\n  return this.playerWrapper.getContentPlayheadTracker();\n};\n\n/**\n * Requests ads.\n */\nController.prototype.requestAds = function () {\n  this.sdkImpl.requestAds();\n};\n\n/**\n * Add or modify a setting.\n *\n * @param {string} key Key to modify\n * @param {Object} value Value to set at key.\n */\nController.prototype.setSetting = function (key, value) {\n  this.settings[key] = value;\n};\n\n/**\n * Called when there is an error loading ads.\n *\n * @param {Object} adErrorEvent The ad error event thrown by the IMA SDK.\n */\nController.prototype.onErrorLoadingAds = function (adErrorEvent) {\n  this.adUi.onAdError();\n  this.playerWrapper.onAdError(adErrorEvent);\n};\n\n/**\n * Called by the ad UI when the play/pause button is clicked.\n */\nController.prototype.onAdPlayPauseClick = function () {\n  if (this.sdkImpl.isAdPlaying()) {\n    this.adUi.onAdsPaused();\n    this.sdkImpl.pauseAds();\n  } else {\n    this.adUi.onAdsPlaying();\n    this.sdkImpl.resumeAds();\n  }\n};\n\n/**\n * Called by the ad UI when the mute button is clicked.\n *\n */\nController.prototype.onAdMuteClick = function () {\n  if (this.sdkImpl.isAdMuted()) {\n    this.playerWrapper.unmute();\n    this.adUi.unmute();\n    this.sdkImpl.unmute();\n  } else {\n    this.playerWrapper.mute();\n    this.adUi.mute();\n    this.sdkImpl.mute();\n  }\n};\n\n/**\n * Set the volume of the player and ads. 0-1.\n *\n * @param {number} volume The new volume.\n */\nController.prototype.setVolume = function (volume) {\n  this.playerWrapper.setVolume(volume);\n  this.sdkImpl.setVolume(volume);\n};\n\n/**\n * @return {number} The volume of the content player.\n */\nController.prototype.getPlayerVolume = function () {\n  return this.playerWrapper.getVolume();\n};\n\n/**\n * Toggle fullscreen state.\n */\nController.prototype.toggleFullscreen = function () {\n  this.playerWrapper.toggleFullscreen();\n};\n\n/**\n * Relays ad errors to the player wrapper.\n *\n * @param {Object} adErrorEvent The ad error event thrown by the IMA SDK.\n */\nController.prototype.onAdError = function (adErrorEvent) {\n  this.adUi.onAdError();\n  this.playerWrapper.onAdError(adErrorEvent);\n};\n\n/**\n * Handles ad break starting.\n *\n * @param {Object} adEvent The event fired by the IMA SDK.\n */\nController.prototype.onAdBreakStart = function (adEvent) {\n  this.playerWrapper.onAdBreakStart();\n  this.adUi.onAdBreakStart(adEvent);\n};\n\n/**\n * Show the ad container.\n */\nController.prototype.showAdContainer = function () {\n  this.adUi.showAdContainer();\n};\n\n/**\n * Handles ad break ending.\n */\nController.prototype.onAdBreakEnd = function () {\n  this.playerWrapper.onAdBreakEnd();\n  this.adUi.onAdBreakEnd();\n};\n\n/**\n * Handles when all ads have finished playing.\n */\nController.prototype.onAllAdsCompleted = function () {\n  this.adUi.onAllAdsCompleted();\n  this.playerWrapper.onAllAdsCompleted();\n};\n\n/**\n * Handles the SDK firing an ad paused event.\n */\nController.prototype.onAdsPaused = function () {\n  this.adUi.onAdsPaused();\n};\n\n/**\n * Handles the SDK firing an ad resumed event.\n */\nController.prototype.onAdsResumed = function () {\n  this.adUi.onAdsResumed();\n};\n\n/**\n * Takes data from the sdk impl and passes it to the ad UI to update the UI.\n *\n * @param {number} currentTime Current time of the ad.\n * @param {number} remainingTime Remaining time of the ad.\n * @param {number} duration Duration of the ad.\n * @param {number} adPosition Index of the ad in the pod.\n * @param {number} totalAds Total number of ads in the pod.\n */\nController.prototype.onAdPlayheadUpdated = function (currentTime, remainingTime, duration, adPosition, totalAds) {\n  this.adUi.updateAdUi(currentTime, remainingTime, duration, adPosition, totalAds);\n};\n\n/**\n * Handles ad log messages.\n * @param {google.ima.AdEvent} adEvent The AdEvent thrown by the IMA SDK.\n */\nController.prototype.onAdLog = function (adEvent) {\n  this.playerWrapper.onAdLog(adEvent);\n};\n\n/**\n * @return {Object} The current ad.\n */\nController.prototype.getCurrentAd = function () {\n  return this.sdkImpl.getCurrentAd();\n};\n\n/**\n * Play content.\n */\nController.prototype.playContent = function () {\n  this.playerWrapper.play();\n};\n\n/**\n * Handles when a linear ad starts.\n */\nController.prototype.onLinearAdStart = function () {\n  this.adUi.onLinearAdStart();\n  this.playerWrapper.onAdStart();\n};\n\n/**\n * Handles when a non-linear ad loads.\n */\nController.prototype.onNonLinearAdLoad = function () {\n  this.adUi.onNonLinearAdLoad();\n};\n\n/**\n * Handles when a non-linear ad starts.\n */\nController.prototype.onNonLinearAdStart = function () {\n  this.adUi.onNonLinearAdLoad();\n  this.playerWrapper.onAdStart();\n};\n\n/**\n * Get the player width.\n *\n * @return {number} The width of the player.\n */\nController.prototype.getPlayerWidth = function () {\n  return this.playerWrapper.getPlayerWidth();\n};\n\n/**\n * Get the player height.\n *\n * @return {number} The height of the player.\n */\nController.prototype.getPlayerHeight = function () {\n  return this.playerWrapper.getPlayerHeight();\n};\n\n/**\n * Tells the player wrapper that ads are ready.\n */\nController.prototype.onAdsReady = function () {\n  this.playerWrapper.onAdsReady();\n};\n\n/**\n * Called when the player wrapper detects that the player has been resized.\n *\n * @param {number} width The post-resize width of the player.\n * @param {number} height The post-resize height of the player.\n */\nController.prototype.onPlayerResize = function (width, height) {\n  this.sdkImpl.onPlayerResize(width, height);\n};\n\n/**\n * Called by the player wrapper when content completes.\n */\nController.prototype.onContentComplete = function () {\n  this.sdkImpl.onContentComplete();\n};\n\n/**\n * Called by the player wrapper when it's time to play a post-roll but we don't\n * have one to play.\n */\nController.prototype.onNoPostroll = function () {\n  this.playerWrapper.onNoPostroll();\n};\n\n/**\n * Called when content and all ads have completed.\n */\nController.prototype.onContentAndAdsCompleted = function () {\n  for (let index in this.contentAndAdsEndedListeners) {\n    if (typeof this.contentAndAdsEndedListeners[index] === 'function') {\n      this.contentAndAdsEndedListeners[index]();\n    }\n  }\n};\n\n/**\n * Called when the player is disposed.\n */\nController.prototype.onPlayerDisposed = function () {\n  this.contentAndAdsEndedListeners = [];\n  this.sdkImpl.onPlayerDisposed();\n};\n\n/**\n * Called when the player is ready to play a pre-roll.\n */\nController.prototype.onPlayerReadyForPreroll = function () {\n  this.sdkImpl.onPlayerReadyForPreroll();\n};\n\n/**\n * Called if the ad times out.\n */\nController.prototype.onAdTimeout = function () {\n  this.sdkImpl.onAdTimeout();\n};\n\n/**\n * Called when the player is ready.\n */\nController.prototype.onPlayerReady = function () {\n  this.sdkImpl.onPlayerReady();\n};\n\n/**\n * Called when the player enters fullscreen.\n */\nController.prototype.onPlayerEnterFullscreen = function () {\n  this.adUi.onPlayerEnterFullscreen();\n  this.sdkImpl.onPlayerEnterFullscreen();\n};\n\n/**\n * Called when the player exits fullscreen.\n */\nController.prototype.onPlayerExitFullscreen = function () {\n  this.adUi.onPlayerExitFullscreen();\n  this.sdkImpl.onPlayerExitFullscreen();\n};\n\n/**\n * Called when the player volume changes.\n *\n * @param {number} volume The new player volume.\n */\nController.prototype.onPlayerVolumeChanged = function (volume) {\n  this.adUi.onPlayerVolumeChanged(volume);\n  this.sdkImpl.onPlayerVolumeChanged(volume);\n};\n\n/**\n * Sets the content of the video player. You should use this method instead\n * of setting the content src directly to ensure the proper ad tag is\n * requested when the video content is loaded.\n * @param {?string} contentSrc The URI for the content to be played. Leave\n *     blank to use the existing content.\n * @param {?string} adTag The ad tag to be requested when the content loads.\n *     Leave blank to use the existing ad tag.\n */\nController.prototype.setContentWithAdTag = function (contentSrc, adTag) {\n  this.reset();\n  this.settings.adTagUrl = adTag ? adTag : this.settings.adTagUrl;\n  this.playerWrapper.changeSource(contentSrc);\n};\n\n/**\n * Sets the content of the video player. You should use this method instead\n * of setting the content src directly to ensure the proper ads response is\n * used when the video content is loaded.\n * @param {?string} contentSrc The URI for the content to be played. Leave\n *     blank to use the existing content.\n * @param {?string} adsResponse The ads response to be requested when the\n *     content loads. Leave blank to use the existing ads response.\n */\nController.prototype.setContentWithAdsResponse = function (contentSrc, adsResponse) {\n  this.reset();\n  this.settings.adsResponse = adsResponse ? adsResponse : this.settings.adsResponse;\n  this.playerWrapper.changeSource(contentSrc);\n};\n\n/**\n * Sets the content of the video player. You should use this method instead\n * of setting the content src directly to ensure the proper ads request is\n * used when the video content is loaded.\n * @param {?string} contentSrc The URI for the content to be played. Leave\n *     blank to use the existing content.\n * @param {?Object} adsRequest The ads request to be requested when the\n *     content loads. Leave blank to use the existing ads request.\n */\nController.prototype.setContentWithAdsRequest = function (contentSrc, adsRequest) {\n  this.reset();\n  this.settings.adsRequest = adsRequest ? adsRequest : this.settings.adsRequest;\n  this.playerWrapper.changeSource(contentSrc);\n};\n\n/**\n * Resets the state of the plugin.\n */\nController.prototype.reset = function () {\n  this.sdkImpl.reset();\n  this.playerWrapper.reset();\n  this.adUi.reset();\n};\n\n/**\n * Listener JSDoc for ESLint. This listener can be passed to\n * (add|remove)ContentEndedListener.\n * @callback listener\n */\n\n/**\n * Adds a listener for the 'contentended' event of the video player. This should\n * be used instead of setting an 'contentended' listener directly to ensure that\n * the ima can do proper cleanup of the SDK before other event listeners are\n * called.\n * @param {listener} listener The listener to be called when content\n *     completes.\n */\nController.prototype.addContentEndedListener = function (listener) {\n  this.playerWrapper.addContentEndedListener(listener);\n};\n\n/**\n * Adds a listener that will be called when content and all ads have\n * finished playing.\n * @param {listener} listener The listener to be called when content and ads\n *     complete.\n */\nController.prototype.addContentAndAdsEndedListener = function (listener) {\n  this.contentAndAdsEndedListeners.push(listener);\n};\n\n/**\n * Sets the listener to be called to trigger manual ad break playback.\n * @param {listener} listener The listener to be called to trigger manual ad\n *     break playback.\n */\nController.prototype.setAdBreakReadyListener = function (listener) {\n  this.sdkImpl.setAdBreakReadyListener(listener);\n};\n\n/**\n * Changes the flag to show or hide the ad countdown timer.\n *\n * @param {boolean} showCountdownIn Show or hide the countdown timer.\n */\nController.prototype.setShowCountdown = function (showCountdownIn) {\n  this.adUi.setShowCountdown(showCountdownIn);\n  this.showCountdown = showCountdownIn;\n  this.adUi.countdownDiv.style.display = this.showCountdown ? 'block' : 'none';\n};\n\n/**\n * Initializes the AdDisplayContainer. On mobile, this must be done as a\n * result of user action.\n */\nController.prototype.initializeAdDisplayContainer = function () {\n  this.sdkImpl.initializeAdDisplayContainer();\n};\n\n/**\n * Called by publishers in manual ad break playback mode to start an ad\n * break.\n */\nController.prototype.playAdBreak = function () {\n  this.sdkImpl.playAdBreak();\n};\n\n/**\n * Callback JSDoc for ESLint. This callback can be passed to addEventListener.\n * @callback callback\n */\n\n/**\n * Ads an EventListener to the AdsManager. For a list of available events,\n * see\n * https://developers.google.com/interactive-media-ads/docs/sdks/html5/client-side/reference/js/google.ima.AdEvent#.Type\n * @param {google.ima.AdEvent.Type} event The AdEvent.Type for which to\n *     listen.\n * @param {callback} callback The method to call when the event is fired.\n */\nController.prototype.addEventListener = function (event, callback) {\n  this.sdkImpl.addEventListener(event, callback);\n};\n\n/**\n * Returns the instance of the AdsManager.\n * @return {google.ima.AdsManager} The AdsManager being used by the plugin.\n */\nController.prototype.getAdsManager = function () {\n  return this.sdkImpl.getAdsManager();\n};\n\n/**\n * Returns the instance of the player id.\n * @return {string} The player id.\n */\nController.prototype.getPlayerId = function () {\n  return this.playerWrapper.getPlayerId();\n};\n\n/**\n * Changes the ad tag. You will need to call requestAds after this method\n * for the new ads to be requested.\n * @param {?string} adTag The ad tag to be requested the next time\n *     requestAds is called.\n */\nController.prototype.changeAdTag = function (adTag) {\n  this.reset();\n  this.settings.adTagUrl = adTag;\n};\n\n/**\n * Pauses the ad.\n */\nController.prototype.pauseAd = function () {\n  this.adUi.onAdsPaused();\n  this.sdkImpl.pauseAds();\n};\n\n/**\n * Resumes the ad.\n */\nController.prototype.resumeAd = function () {\n  this.adUi.onAdsPlaying();\n  this.sdkImpl.resumeAds();\n};\n\n/**\n * Toggles video/ad playback.\n */\nController.prototype.togglePlayback = function () {\n  this.playerWrapper.togglePlayback();\n};\n\n/**\n * @return {boolean} true if we expect that ads will autoplay. false otherwise.\n */\nController.prototype.adsWillAutoplay = function () {\n  if (this.settings.adsWillAutoplay !== undefined) {\n    return this.settings.adsWillAutoplay;\n  } else if (this.settings.adWillAutoplay !== undefined) {\n    return this.settings.adWillAutoplay;\n  } else {\n    return !!this.playerWrapper.getPlayerOptions().autoplay;\n  }\n};\n\n/**\n * @return {boolean} true if we expect that ads will autoplay. false otherwise.\n */\nController.prototype.adsWillPlayMuted = function () {\n  if (this.settings.adsWillPlayMuted !== undefined) {\n    return this.settings.adsWillPlayMuted;\n  } else if (this.settings.adWillPlayMuted !== undefined) {\n    return this.settings.adWillPlayMuted;\n  } else if (this.playerWrapper.getPlayerOptions().muted !== undefined) {\n    return this.playerWrapper.getPlayerOptions().muted;\n  } else {\n    return this.playerWrapper.getVolume() == 0;\n  }\n};\n\n/**\n * Triggers an event on the VJS player\n * @param  {string} name The event name.\n * @param  {Object} data The event data.\n */\nController.prototype.triggerPlayerEvent = function (name, data) {\n  this.playerWrapper.triggerPlayerEvent(name, data);\n};\n\n/**\n * Copyright 2021 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * IMA SDK integration plugin for Video.js. For more information see\n * https://www.github.com/googleads/videojs-ima\n */\n\n/**\n * Wraps the video.js stream player for the plugin.\n *\n * @param {!Object} player Video.js player instance.\n * @param {!Object} adsPluginSettings Settings for the contrib-ads plugin.\n * @param {!DaiController} daiController Reference to the parent controller.\n */\nconst PlayerWrapper$2 = function (player, adsPluginSettings, daiController) {\n  /**\n   * Instance of the video.js player.\n   */\n  this.vjsPlayer = player;\n\n  /**\n   * Plugin DAI controller.\n   */\n  this.daiController = daiController;\n\n  /**\n   * Video.js control bar.\n   */\n  this.vjsControls = this.vjsPlayer.getChild('controlBar');\n\n  /**\n   * Vanilla HTML5 video player underneath the video.js player.\n   */\n  this.h5Player = null;\n\n  this.vjsPlayer.on('dispose', this.playerDisposedListener.bind(this));\n  this.vjsPlayer.on('pause', this.onPause.bind(this));\n  this.vjsPlayer.on('play', this.onPlay.bind(this));\n  this.vjsPlayer.on('seeked', this.onSeekEnd.bind(this));\n  this.vjsPlayer.ready(this.onPlayerReady.bind(this));\n  this.vjsPlayer.ads(adsPluginSettings);\n};\n\n/**\n * Called in response to the video.js player's 'disposed' event.\n */\nPlayerWrapper$2.prototype.playerDisposedListener = function () {\n  this.contentEndedListeners = [];\n  this.daiController.onPlayerDisposed();\n};\n\n/**\n * Called on the player 'pause' event. Handles displaying controls during\n * paused ad breaks.\n */\nPlayerWrapper$2.prototype.onPause = function () {\n  // This code will run if the stream is paused during an ad break. Since\n  // controls are usually hidden during ads, they will now show to allow\n  // users to resume ad playback.\n  if (this.daiController.isInAdBreak()) {\n    this.vjsControls.show();\n  }\n};\n\n/**\n * Called on the player 'play' event. Handles hiding controls during\n * ad breaks while playing.\n */\nPlayerWrapper$2.prototype.onPlay = function () {\n  if (this.daiController.isInAdBreak()) {\n    this.vjsControls.hide();\n  }\n};\n\n/**\n * Called on the player's 'seeked' event. Sets up handling for ad break\n * snapback for VOD streams.\n */\nPlayerWrapper$2.prototype.onSeekEnd = function () {\n  this.daiController.onSeekEnd(this.vjsPlayer.currentTime());\n};\n\n/**\n * Called on the player's 'ready' event to begin initiating IMA.\n */\nPlayerWrapper$2.prototype.onPlayerReady = function () {\n  this.h5Player = document.getElementById(this.getPlayerId()).getElementsByClassName('vjs-tech')[0];\n  this.daiController.onPlayerReady();\n};\n\n/**\n * @return {!Object} The stream player.\n */\nPlayerWrapper$2.prototype.getStreamPlayer = function () {\n  return this.h5Player;\n};\n\n/**\n * @return {!Object} The video.js player.\n */\nPlayerWrapper$2.prototype.getVjsPlayer = function () {\n  return this.vjsPlayer;\n};\n\n/**\n * @return {!Object} The vjs player's options object.\n */\nPlayerWrapper$2.prototype.getPlayerOptions = function () {\n  return this.vjsPlayer.options_;\n};\n\n/**\n * Returns the instance of the player id.\n * @return {string} The player id.\n */\nPlayerWrapper$2.prototype.getPlayerId = function () {\n  return this.vjsPlayer.id();\n};\n\n/**\n * Handles ad errors.\n *\n * @param {!Object} adErrorEvent The ad error event thrown by the IMA SDK.\n */\nPlayerWrapper$2.prototype.onAdError = function (adErrorEvent) {\n  this.vjsControls.show();\n  const errorMessage = adErrorEvent.getError !== undefined ? adErrorEvent.getError() : adErrorEvent.stack;\n  this.vjsPlayer.trigger({ type: 'adserror', data: {\n      AdError: errorMessage,\n      AdErrorEvent: adErrorEvent\n    } });\n};\n\n/**\n * Handles ad break starting.\n */\nPlayerWrapper$2.prototype.onAdBreakStart = function () {\n  this.vjsControls.hide();\n};\n\n/**\n * Handles ad break ending.\n */\nPlayerWrapper$2.prototype.onAdBreakEnd = function () {\n  this.vjsControls.show();\n};\n\n/**\n * Reset the player.\n */\nPlayerWrapper$2.prototype.reset = function () {\n  this.vjsControls.show();\n};\n\n/**\n * Copyright 2021 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * IMA SDK integration plugin for Video.js. For more information see\n * https://www.github.com/googleads/videojs-ima\n */\n\n/**\n * Implementation of the IMA DAI SDK for the plugin.\n *\n * @param {DaiController!} daiController Reference to the parent DAI\n * controller.\n *\n * @constructor\n * @struct\n * @final\n */\nconst SdkImpl$2 = function (daiController) {\n  /**\n   * Plugin DAI controller.\n   */\n  this.daiController = daiController;\n\n  /**\n   * The html5 stream player.\n   */\n  this.streamPlayer = null;\n\n  /**\n   * The videoJS stream player.\n   */\n  this.vjsPlayer = null;\n\n  /**\n   * IMA SDK StreamManager\n   */\n  this.streamManager = null;\n\n  /**\n   * IMA stream UI settings.\n   */\n  /* eslint no-undef: 'error' */\n  /* global google */\n  this.uiSettings = new google.ima.dai.api.UiSettings();\n\n  /**\n   * If the stream is currently in an ad break.\n   */\n  this.isAdBreak = false;\n\n  /**\n   * If the stream is currently seeking from a snapback.\n   */\n  this.isSnapback = false;\n\n  /**\n   * Originally seeked to time, to return stream to after ads.\n   */\n  this.snapForwardTime = 0;\n\n  /**\n   * Timed metadata for the stream.\n   */\n  this.timedMetadata;\n\n  /**\n   * Timed metadata record.\n   */\n  this.metadataLoaded = {};\n\n  this.SOURCE_TYPES = {\n    hls: 'application/x-mpegURL',\n    dash: 'application/dash+xml'\n  };\n};\n\n/**\n * Creates and initializes the IMA DAI SDK objects.\n */\nSdkImpl$2.prototype.initImaDai = function () {\n  this.streamPlayer = this.daiController.getStreamPlayer();\n  this.vjsPlayer = this.daiController.getVjsPlayer();\n\n  this.createAdUiDiv();\n  if (this.daiController.getSettings().locale) {\n    this.uiSettings.setLocale(this.daiController.getSettings().locale);\n  }\n\n  this.streamManager = new google.ima.dai.api.StreamManager(this.streamPlayer, this.adUiDiv, this.uiSettings);\n\n  this.streamPlayer.addEventListener('pause', this.onStreamPause);\n  this.streamPlayer.addEventListener('play', this.onStreamPlay);\n\n  this.streamManager.addEventListener([google.ima.dai.api.StreamEvent.Type.LOADED, google.ima.dai.api.StreamEvent.Type.ERROR, google.ima.dai.api.StreamEvent.Type.AD_BREAK_STARTED, google.ima.dai.api.StreamEvent.Type.AD_BREAK_ENDED], this.onStreamEvent.bind(this), false);\n\n  this.vjsPlayer.textTracks().onaddtrack = this.onAddTrack.bind(this);\n\n  this.vjsPlayer.trigger({\n    type: 'stream-manager',\n    StreamManager: this.streamManager\n  });\n\n  this.requestStream();\n};\n\n/**\n * Called when the video player has metadata to process.\n * @param {Event!} event The event that triggered this call.\n */\nSdkImpl$2.prototype.onAddTrack = function (event) {\n  const track = event.track;\n  if (track.kind === 'metadata') {\n    track.mode = 'hidden';\n    track.oncuechange = e => {\n      for (const cue of track.activeCues_) {\n        const metadata = {};\n        metadata[cue.value.key] = cue.value.data;\n        this.streamManager.onTimedMetadata(metadata);\n      }\n    };\n  }\n};\n\n/**\n * Creates the ad UI container.\n */\nSdkImpl$2.prototype.createAdUiDiv = function () {\n  const uiDiv = document.createElement('div');\n  uiDiv.id = 'ad-ui';\n  // 3em is the height of the control bar.\n  uiDiv.style.height = 'calc(100% - 3em)';\n  this.streamPlayer.parentNode.appendChild(uiDiv);\n  this.adUiDiv = uiDiv;\n};\n\n/**\n * Called on pause to update the ad UI.\n */\nSdkImpl$2.prototype.onStreamPause = function () {\n  if (this.isAdBreak) {\n    this.adUiDiv.style.display = 'none';\n  }\n};\n\n/**\n * Called on play to update the ad UI.\n */\nSdkImpl$2.prototype.onStreamPlay = function () {\n  if (this.isAdBreak) {\n    this.adUiDiv.style.display = 'block';\n  }\n};\n\n/**\n * Called on play to update the ad UI.\n * @param {number} currentTime the current time of the stream.\n */\nSdkImpl$2.prototype.onSeekEnd = function (currentTime) {\n  const streamType = this.daiController.getSettings().streamType;\n  if (streamType === 'live') {\n    return;\n  }\n  if (this.isSnapback) {\n    this.isSnapback = false;\n    return;\n  }\n  const previousCuePoint = this.streamManager.previousCuePointForStreamTime(currentTime);\n  if (previousCuePoint && !previousCuePoint.played) {\n    this.isSnapback = true;\n    this.snapForwardTime = currentTime;\n    this.vjsPlayer.currentTime(previousCuePoint.start);\n  }\n};\n\n/**\n * Handles IMA events.\n * @param {google.ima.StreamEvent!} event the IMA event\n */\nSdkImpl$2.prototype.onStreamEvent = function (event) {\n  switch (event.type) {\n    case google.ima.dai.api.StreamEvent.Type.LOADED:\n      this.loadUrl(event.getStreamData().url);\n      break;\n    case google.ima.dai.api.StreamEvent.Type.ERROR:\n      window.console.warn('Error loading stream, attempting to play backup ' + 'stream. ' + event.getStreamData().errorMessage);\n      this.daiController.onErrorLoadingAds(event);\n      if (this.daiController.getSettings().fallbackStreamUrl) {\n        this.loadurl(this.daiController.getSettings().fallbackStreamUrl);\n      }\n      break;\n    case google.ima.dai.api.StreamEvent.Type.AD_BREAK_STARTED:\n      this.isAdBreak = true;\n      this.adUiDiv.style.display = 'block';\n      this.daiController.onAdBreakStart();\n      break;\n    case google.ima.dai.api.StreamEvent.Type.AD_BREAK_ENDED:\n      this.isAdBreak = false;\n      this.adUiDiv.style.display = 'none';\n      this.daiController.onAdBreakEnd();\n      if (this.snapForwardTime && this.snapForwardTime > this.vjsPlayer.currentTime()) {\n        this.vjsPlayer.currentTime(this.snapForwardTime);\n        this.snapForwardTime = 0;\n      }\n      break;\n    default:\n      break;\n  }\n};\n\n/**\n * Loads the stream URL .\n * @param {string} streamUrl the URL for the stream being loaded.\n */\nSdkImpl$2.prototype.loadUrl = function (streamUrl) {\n  this.vjsPlayer.ready(function () {\n    const streamFormat = this.daiController.getSettings().streamFormat;\n    this.vjsPlayer.src({\n      src: streamUrl,\n      type: this.SOURCE_TYPES[streamFormat]\n    });\n\n    const bookmarkTime = this.daiController.getSettings().bookmarkTime;\n    if (bookmarkTime) {\n      const startTime = this.streamManager.streamTimeForContentTime(bookmarkTime);\n      // Seeking on load triggers the onSeekEnd event, so treat this seek as\n      // if it's snapback. Without this, resuming at a bookmark kicks you\n      // back to the ad before the bookmark.\n      this.isSnapback = true;\n      this.vjsPlayer.currentTime(startTime);\n    }\n  }.bind(this));\n};\n\n/**\n * Creates the AdsRequest and request ads through the AdsLoader.\n */\nSdkImpl$2.prototype.requestStream = function () {\n  let streamRequest;\n  const streamType = this.daiController.getSettings().streamType;\n  if (streamType === 'vod') {\n    streamRequest = new google.ima.dai.api.VODStreamRequest();\n    streamRequest.contentSourceId = this.daiController.getSettings().cmsId;\n    streamRequest.videoId = this.daiController.getSettings().videoId;\n  } else if (streamType === 'live') {\n    streamRequest = new google.ima.dai.api.LiveStreamRequest();\n    streamRequest.assetKey = this.daiController.getSettings().assetKey;\n  } else {\n    window.console.warn('No valid stream type selected');\n  }\n  streamRequest.format = this.daiController.getSettings().streamFormat;\n\n  if (this.daiController.getSettings().apiKey) {\n    streamRequest.apiKey = this.daiController.getSettings().apiKey;\n  }\n  if (this.daiController.getSettings().authKey) {\n    streamRequest.authKey = this.daiController.getSettings().authKey;\n  }\n  if (this.daiController.getSettings().adTagParameters) {\n    streamRequest.adTagParameters = this.daiController.getSettings().adTagParameters;\n  }\n  if (this.daiController.getSettings().streamActivityMonitorId) {\n    streamRequest.streamActivityMonitorId = this.daiController.getSettings().streamActivityMonitorId;\n  }\n\n  if (this.daiController.getSettings().omidMode) {\n    streamRequest.omidAccessModeRules = {};\n    const omidValues = this.daiController.getSettings().omidMode;\n\n    if (omidValues.FULL) {\n      streamRequest.omidAccessModeRules[google.ima.OmidAccessMode.FULL] = omidValues.FULL;\n    }\n    if (omidValues.DOMAIN) {\n      streamRequest.omidAccessModeRules[google.ima.OmidAccessMode.DOMAIN] = omidValues.DOMAIN;\n    }\n    if (omidValues.LIMITED) {\n      streamRequest.omidAccessModeRules[google.ima.OmidAccessMode.LIMITED] = omidValues.LIMITED;\n    }\n  }\n\n  this.streamManager.requestStream(streamRequest);\n  this.vjsPlayer.trigger({\n    type: 'stream-request',\n    StreamRequest: streamRequest\n  });\n};\n\n/**\n * Initiates IMA when the player is ready.\n */\nSdkImpl$2.prototype.onPlayerReady = function () {\n  this.initImaDai();\n};\n\n/**\n * Reset the StreamManager when the player is disposed.\n */\nSdkImpl$2.prototype.onPlayerDisposed = function () {\n  if (this.streamManager) {\n    this.streamManager.reset();\n  }\n};\n\n/**\n * Returns the instance of the StreamManager.\n * @return {google.ima.StreamManager!} The StreamManager being used by the\n * plugin.\n */\nSdkImpl$2.prototype.getStreamManager = function () {\n  return this.StreamManager;\n};\n\n/**\n * Reset the SDK implementation.\n */\nSdkImpl$2.prototype.reset = function () {\n  if (this.StreamManager) {\n    this.StreamManager.reset();\n  }\n};\n\n/**\n * Copyright 2021 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * IMA SDK integration plugin for Video.js. For more information see\n * https://www.github.com/googleads/videojs-ima\n */\n/**\n * The coordinator for the DAI portion of the plugin. Facilitates\n * communication between all other plugin classes.\n *\n * @param {Object!} player Instance of the video.js player.\n * @param {Object!} options Options provided by the implementation.\n * @constructor\n * @struct\n * @final\n */\nconst DaiController = function (player, options) {\n  /**\n  * If the stream is currently in an ad break.\n  * @type {boolean}\n  */\n  this.inAdBreak = false;\n\n  /**\n  * Stores user-provided settings.\n  * @type {Object!}\n  */\n  this.settings = {};\n\n  /**\n  * Whether or not we are running on a mobile platform.\n  */\n  this.isMobile = navigator.userAgent.match(/iPhone/i) || navigator.userAgent.match(/iPad/i) || navigator.userAgent.match(/Android/i);\n\n  /**\n  * Whether or not we are running on an iOS platform.\n  */\n  this.isIos = navigator.userAgent.match(/iPhone/i) || navigator.userAgent.match(/iPad/i);\n\n  this.initWithSettings(options);\n\n  /**\n  * Stores contrib-ads default settings.\n  */\n  const contribAdsDefaults = {\n    debug: this.settings.debug,\n    timeout: this.settings.timeout,\n    prerollTimeout: this.settings.prerollTimeout\n  };\n  const adsPluginSettings = Object.assign({}, contribAdsDefaults, options.contribAdsSettings || {});\n\n  this.playerWrapper = new PlayerWrapper$2(player, adsPluginSettings, this);\n  this.sdkImpl = new SdkImpl$2(this);\n};\n\nDaiController.IMA_DEFAULTS = {\n  adLabel: 'Advertisement',\n  adLabelNofN: 'of',\n  debug: false,\n  disableAdControls: false,\n  showControlsForJSAds: true\n};\n\n/**\n * Extends the settings to include user-provided settings.\n *\n * @param {Object!} options Options to be used in initialization.\n */\nDaiController.prototype.initWithSettings = function (options) {\n  this.settings = Object.assign({}, DaiController.IMA_DEFAULTS, options || {});\n\n  this.warnAboutDeprecatedSettings();\n\n  // Default showing countdown timer to true.\n  this.showCountdown = true;\n  if (this.settings.showCountdown === false) {\n    this.showCountdown = false;\n  }\n};\n\n/**\n * Logs console warnings when deprecated settings are used.\n */\nDaiController.prototype.warnAboutDeprecatedSettings = function () {\n  const deprecatedSettings = [\n    // Currently no DAI plugin settings are deprecated.\n  ];\n  deprecatedSettings.forEach(setting => {\n    if (this.settings[setting] !== undefined) {\n      console.warn('WARNING: videojs.imaDai setting ' + setting + ' is deprecated');\n    }\n  });\n};\n\n/**\n * Return the settings object.\n *\n * @return {Object!} The settings object.\n */\nDaiController.prototype.getSettings = function () {\n  return this.settings;\n};\n\n/**\n * Return whether or not we're in a mobile environment.\n *\n * @return {boolean} True if running on mobile, false otherwise.\n */\nDaiController.prototype.getIsMobile = function () {\n  return this.isMobile;\n};\n\n/**\n * Return whether or not we're in an iOS environment.\n *\n * @return {boolean} True if running on iOS, false otherwise.\n */\nDaiController.prototype.getIsIos = function () {\n  return this.isIos;\n};\n\n/**\n * @return {Object!} The html5 player.\n */\nDaiController.prototype.getStreamPlayer = function () {\n  return this.playerWrapper.getStreamPlayer();\n};\n\n/**\n * @return {Object!} The video.js player.\n */\nDaiController.prototype.getVjsPlayer = function () {\n  return this.playerWrapper.getVjsPlayer();\n};\n\n/**\n * Requests the stream.\n */\nDaiController.prototype.requestStream = function () {\n  this.sdkImpl.requestStream();\n};\n\n/**\n * Add or modify a setting.\n *\n * @param {string} key Key to modify\n * @param {Object!} value Value to set at key.\n*/\nDaiController.prototype.setSetting = function (key, value) {\n  this.settings[key] = value;\n};\n\n/**\n * Called when there is an error loading ads.\n *\n * @param {Object!} adErrorEvent The ad error event thrown by the IMA SDK.\n */\nDaiController.prototype.onErrorLoadingAds = function (adErrorEvent) {\n  this.playerWrapper.onAdError(adErrorEvent);\n};\n\n/**\n * Relays ad errors to the player wrapper.\n *\n * @param {Object!} adErrorEvent The ad error event thrown by the IMA SDK.\n */\nDaiController.prototype.onAdError = function (adErrorEvent) {\n  this.playerWrapper.onAdError(adErrorEvent);\n};\n\n/**\n * Signals player that an ad break has started.\n */\nDaiController.prototype.onAdBreakStart = function () {\n  this.inAdBreak = true;\n  this.playerWrapper.onAdBreakStart();\n};\n\n/**\n * Signals player that an ad break has ended.\n */\nDaiController.prototype.onAdBreakEnd = function () {\n  this.inAdBreak = false;\n  this.playerWrapper.onAdBreakEnd();\n};\n\n/**\n * Called when the player is disposed.\n */\nDaiController.prototype.onPlayerDisposed = function () {\n  this.contentAndAdsEndedListeners = [];\n  this.sdkImpl.onPlayerDisposed();\n};\n\n/**\n * Returns if the stream is currently in an ad break.\n * @return {boolean} If the stream is currently in an ad break.\n */\nDaiController.prototype.isInAdBreak = function () {\n  return this.inAdBreak;\n};\n\n/**\n * Called on seek end to check for ad snapback.\n * @param {number} currentTime the current time of the stream.\n */\nDaiController.prototype.onSeekEnd = function (currentTime) {\n  this.sdkImpl.onSeekEnd(currentTime);\n};\n\n/**\n * Called when the player is ready.\n */\nDaiController.prototype.onPlayerReady = function () {\n  this.sdkImpl.onPlayerReady();\n};\n\n/**\n * Resets the state of the plugin.\n */\nDaiController.prototype.reset = function () {\n  this.sdkImpl.reset();\n  this.playerWrapper.reset();\n};\n\n/**\n * Adds an EventListener to the StreamManager. For a list of available events,\n * see\n * https://developers.google.com/interactive-media-ads/docs/sdks/html5/dai/reference/js/StreamEvent\n * @param {google.ima.StreamEvent.Type!} event The AdEvent.Type for which to\n *     listen.\n * @param {callback!} callback The method to call when the event is fired.\n */\nDaiController.prototype.addEventListener = function (event, callback) {\n  this.sdkImpl.addEventListener(event, callback);\n};\n\n/**\n * Returns the instance of the StreamManager.\n * @return {google.ima.StreamManager!} The StreamManager being used by the\n * plugin.\n */\nDaiController.prototype.getStreamManager = function () {\n  return this.sdkImpl.getStreamManager();\n};\n\n/**\n * Returns the instance of the player id.\n * @return {string} The player id.\n */\nDaiController.prototype.getPlayerId = function () {\n  return this.playerWrapper.getPlayerId();\n};\n\n/**\n * @return {boolean} true if we expect that the stream will autoplay. false\n * otherwise.\n */\nDaiController.prototype.streamWillAutoplay = function () {\n  if (this.settings.streamWillAutoplay !== undefined) {\n    return this.settings.streamWillAutoplay;\n  } else {\n    return !!this.playerWrapper.getPlayerOptions().autoplay;\n  }\n};\n\n/**\n * Triggers an event on the VJS player\n * @param  {string} name The event name.\n * @param  {Object!} data The event data.\n */\nDaiController.prototype.triggerPlayerEvent = function (name, data) {\n  this.playerWrapper.triggerPlayerEvent(name, data);\n};\n\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * IMA SDK integration plugin for Video.js. For more information see\n * https://www.github.com/googleads/videojs-ima\n */\n\n/**\n * Exposes the ImaPlugin to a publisher implementation.\n *\n * @param {Object} player Instance of the video.js player to which this plugin\n *     will be added.\n * @param {Object} options Options provided by the implementation.\n * @constructor\n * @struct\n * @final\n */\nconst ImaPlugin = function (player, options) {\n  this.controller = new Controller(player, options);\n\n  /**\n   * Listener JSDoc for ESLint. This listener can be passed to\n   * addContent(AndAds)EndedListener.\n   * @callback listener\n   */\n\n  /**\n   * Adds a listener that will be called when content and all ads have\n   * finished playing.\n   * @param {listener} listener The listener to be called when content and ads\n   *     complete.\n   */\n  this.addContentAndAdsEndedListener = function (listener) {\n    this.controller.addContentAndAdsEndedListener(listener);\n  }.bind(this);\n\n  /**\n   * Adds a listener for the 'contentended' event of the video player. This\n   * should be used instead of setting an 'contentended' listener directly to\n   * ensure that the ima can do proper cleanup of the SDK before other event\n   * listeners are called.\n   * @param {listener} listener The listener to be called when content\n   *     completes.\n   */\n  this.addContentEndedListener = function (listener) {\n    this.controller.addContentEndedListener(listener);\n  }.bind(this);\n\n  /**\n   * Callback JSDoc for ESLint. This callback can be passed to addEventListener.\n   * @callback callback\n   */\n\n  /**\n   * Ads an EventListener to the AdsManager. For a list of available events,\n   * see\n   * https://developers.google.com/interactive-media-ads/docs/sdks/html5/client-side/reference/js/google.ima.AdEvent#.Type\n   * @param {google.ima.AdEvent.Type} event The AdEvent.Type for which to\n   *     listen.\n   * @param {callback} callback The method to call when the event is fired.\n   */\n  this.addEventListener = function (event, callback) {\n    this.controller.addEventListener(event, callback);\n  }.bind(this);\n\n  /**\n   * Changes the ad tag. You will need to call requestAds after this method\n   * for the new ads to be requested.\n   * @param {?string} adTag The ad tag to be requested the next time requestAds\n   *     is called.\n   */\n  this.changeAdTag = function (adTag) {\n    this.controller.changeAdTag(adTag);\n  }.bind(this);\n\n  /**\n   * Returns the instance of the AdsManager.\n   * @return {google.ima.AdsManager} The AdsManager being used by the plugin.\n   */\n  this.getAdsManager = function () {\n    return this.controller.getAdsManager();\n  }.bind(this);\n\n  /**\n   * Initializes the AdDisplayContainer. On mobile, this must be done as a\n   * result of user action.\n   */\n  this.initializeAdDisplayContainer = function () {\n    this.controller.initializeAdDisplayContainer();\n  }.bind(this);\n\n  /**\n   * Pauses the ad.\n   */\n  this.pauseAd = function () {\n    this.controller.pauseAd();\n  }.bind(this);\n\n  /**\n   * Called by publishers in manual ad break playback mode to start an ad\n   * break.\n   */\n  this.playAdBreak = function () {\n    this.controller.playAdBreak();\n  }.bind(this);\n\n  /**\n   * Creates the AdsRequest and request ads through the AdsLoader.\n   */\n  this.requestAds = function () {\n    this.controller.requestAds();\n  }.bind(this);\n\n  /**\n   * Resumes the ad.\n   */\n  this.resumeAd = function () {\n    this.controller.resumeAd();\n  }.bind(this);\n\n  /**\n   * Sets the listener to be called to trigger manual ad break playback.\n   * @param {listener} listener The listener to be called to trigger manual ad\n   *     break playback.\n   */\n  this.setAdBreakReadyListener = function (listener) {\n    this.controller.setAdBreakReadyListener(listener);\n  }.bind(this);\n\n  /**\n   * Sets the content of the video player. You should use this method instead\n   * of setting the content src directly to ensure the proper ad tag is\n   * requested when the video content is loaded.\n   * @param {?string} contentSrc The URI for the content to be played. Leave\n   *     blank to use the existing content.\n   * @param {?string} adTag The ad tag to be requested when the content loads.\n   *     Leave blank to use the existing ad tag.\n   */\n  this.setContentWithAdTag = function (contentSrc, adTag) {\n    this.controller.setContentWithAdTag(contentSrc, adTag);\n  }.bind(this);\n\n  /**\n   * Sets the content of the video player. You should use this method instead\n   * of setting the content src directly to ensure the proper ads response is\n   * used when the video content is loaded.\n   * @param {?string} contentSrc The URI for the content to be played. Leave\n   *     blank to use the existing content.\n   * @param {?string} adsResponse The ads response to be requested when the\n   *     content loads. Leave blank to use the existing ads response.\n   */\n  this.setContentWithAdsResponse = function (contentSrc, adsResponse) {\n    this.controller.setContentWithAdsResponse(contentSrc, adsResponse);\n  }.bind(this);\n\n  /**\n   * Sets the content of the video player. You should use this method instead\n   * of setting the content src directly to ensure the proper ads request is\n   * used when the video content is loaded.\n   * @param {?string} contentSrc The URI for the content to be played. Leave\n   *     blank to use the existing content.\n   * @param {?Object} adsRequest The ads request to be requested when the\n   *     content loads. Leave blank to use the existing ads request.\n   */\n  this.setContentWithAdsRequest = function (contentSrc, adsRequest) {\n    this.controller.setContentWithAdsRequest(contentSrc, adsRequest);\n  }.bind(this);\n\n  /**\n   * Changes the flag to show or hide the ad countdown timer.\n   *\n   * @param {boolean} showCountdownIn Show or hide the countdown timer.\n   */\n  this.setShowCountdown = function (showCountdownIn) {\n    this.controller.setShowCountdown(showCountdownIn);\n  }.bind(this);\n};\n\n/**\n * Exposes the ImaDaiPlugin to a publisher implementation.\n *\n * @param {Object} player Instance of the video.js player to which this plugin\n *     will be added.\n * @param {Object} options Options provided by the implementation.\n * @constructor\n * @struct\n * @final\n */\nconst ImaDaiPlugin = function (player, options) {\n  this.controller = new DaiController(player, options);\n\n  /**\n   * Adds a listener that will be called when content and all ads in the\n   * stream have finished playing. VOD stream only.\n   * @param {listener} listener The listener to be called when content and ads\n   *     complete.\n   */\n  this.streamEndedListener = function (listener) {\n    this.controller.addStreamEndedListener(listener);\n  }.bind(this);\n\n  /**\n   * Adds an EventListener to the StreamManager.\n   * @param {google.ima.StreamEvent.Type} event The StreamEvent.Type for which\n   * to listen.\n   * @param {callback} callback The method to call when the event is fired.\n   */\n  this.addEventListener = function (event, callback) {\n    this.controller.addEventListener(event, callback);\n  }.bind(this);\n\n  /**\n   * Returns the instance of the StreamManager.\n   * @return {google.ima.StreamManager} The StreamManager being used by the\n   * plugin.\n   */\n  this.getStreamManager = function () {\n    return this.controller.getStreamManager();\n  }.bind(this);\n};\n\n/**\n * Initializes the plugin for client-side ads.\n * @param {Object} options Plugin option set on initiation.\n */\nconst init = function (options) {\n  /* eslint no-invalid-this: 'off' */\n  this.ima = new ImaPlugin(this, options);\n};\n\n/**\n * LiveStream class used for DAI live streams.\n */\nclass LiveStream {\n  /**\n   * LiveStream class constructor used for DAI live streams.\n   * @param {string} streamFormat stream format, plugin currently supports only\n   * 'hls' streams.\n   * @param {string} assetKey live stream's asset key.\n   */\n  constructor(streamFormat, assetKey) {\n    streamFormat = streamFormat.toLowerCase();\n    if (streamFormat !== 'hls' && streamFormat !== 'dash') {\n      window.console.error('VodStream error: incorrect streamFormat.');\n      return;\n    } else if (streamFormat === 'dash') {\n      window.console.error('streamFormat error: DASH streams are not' + 'currently supported by this plugin.');\n      return;\n    } else if (typeof assetKey !== 'string') {\n      window.console.error('assetKey error: value must be string.');\n      return;\n    }\n    this.streamFormat = streamFormat;\n    this.assetKey = assetKey;\n  }\n}\n\n/**\n * VodStream class used for DAI VOD streams.\n */\nclass VodStream {\n  /**\n   * VodStream class constructor used for DAI VOD streams.\n   * @param {string} streamFormat stream format, plugin currently supports only\n   * 'hls' streams.\n   * @param {string} cmsId VOD stream's CMS ID.\n   * @param {string} videoId VOD stream's video ID.\n   */\n  constructor(streamFormat, cmsId, videoId) {\n    streamFormat = streamFormat.toLowerCase();\n    if (streamFormat !== 'hls' && streamFormat !== 'dash') {\n      window.console.error('VodStream error: incorrect streamFormat.');\n      return;\n    } else if (streamFormat === 'dash') {\n      window.console.error('streamFormat error: DASH streams are not' + 'currently supported by this plugin.');\n      return;\n    } else if (typeof cmsId !== 'string') {\n      window.console.error('cmsId error: value must be string.');\n      return;\n    } else if (typeof videoId !== 'string') {\n      window.console.error('videoId error: value must be string.');\n      return;\n    }\n\n    this.streamFormat = streamFormat;\n    this.cmsId = cmsId;\n    this.videoId = videoId;\n  }\n}\n\n/**\n * Initializes the plugin for DAI ads.\n * @param {Object} stream Accepts either an instance of the LiveStream or\n * VodStream classes.\n * @param {Object} options Plugin option set on initiation.\n */\nconst initDai = function (stream, options) {\n  if (stream instanceof LiveStream) {\n    options.streamType = 'live';\n    options.assetKey = stream.assetKey;\n  } else if (stream instanceof VodStream) {\n    options.streamType = 'vod';\n    options.cmsId = stream.cmsId;\n    options.videoId = stream.videoId;\n  } else {\n    window.console.error('initDai() first parameter must be an instance of LiveStream or ' + 'VodStream.');\n    return;\n  }\n\n  options.streamFormat = stream.streamFormat;\n  /* eslint no-invalid-this: 'off' */\n  this.imaDai = new ImaDaiPlugin(this, options);\n};\n\nconst registerPlugin = videojs.registerPlugin || videojs.plugin;\nregisterPlugin('ima', init);\nregisterPlugin('imaDai', initDai);\n\nexport { VodStream, LiveStream };\nexport default ImaPlugin;\n", "import d from \"./node_modules/videojs-ima/dist/videojs.ima.es.js\";export default d;\nexport * from \"./node_modules/videojs-ima/dist/videojs.ima.es.js\""],
  "mappings": "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",
  "names": ["name"]
}
